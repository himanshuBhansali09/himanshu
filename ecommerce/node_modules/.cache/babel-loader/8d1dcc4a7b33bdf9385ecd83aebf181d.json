{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Product/AddProduct/AddProduct.js\";\nimport React, { useState } from 'react';\nimport Input from '../../../components/Ui/Backdrop/Input/Input';\nimport classes from '../../ChangePassword/changePassword.module.css';\nimport { checkValidity } from '../../../shared/utility';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\n\nconst AddProduct = props => {\n  const [authForm, setAuthForm] = useState({\n    productName: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'productName',\n        placeholder: 'your productName'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    brand: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'brand',\n        placeholder: 'your brand'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    description: {\n      elementType: 'textarea',\n      elementConfig: {\n        type: 'description',\n        placeholder: 'product description'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    returnable: {\n      elementType: 'select',\n      elementConfig: {\n        options: [{\n          value: 'true',\n          displayValue: 'true'\n        }, {\n          value: 'false',\n          displayValue: 'false'\n        }]\n      },\n      value: 'true',\n      validation: {},\n      valid: true\n    },\n    cancellable: {\n      elementType: 'select',\n      elementConfig: {\n        options: [{\n          value: 'true',\n          displayValue: 'true'\n        }, {\n          value: 'false',\n          displayValue: 'false'\n        }]\n      },\n      value: 'true',\n      validation: {},\n      valid: true\n    }\n  });\n\n  if (props.addedSuccessfully) {\n    props.history.push(\"/viewCategoriesForSeller\");\n  }\n\n  const Handler = event => {\n    event.preventDefault();\n    props.onFormSubmit(authForm, props.id);\n  };\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }, formElement.id), /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: Handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 14\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, props.error));\n};\n\nconst mapStateToProps = state => {\n  return {\n    id: state.category.id,\n    error: state.product.error,\n    addedSuccessfully: state.product.addedSuccessfully\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormSubmit: (formData, id) => dispatch(actions.addProduct(formData, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Product/AddProduct/AddProduct.js"],"names":["React","useState","Input","classes","checkValidity","actions","connect","AddProduct","props","authForm","setAuthForm","productName","elementType","elementConfig","type","placeholder","value","validation","required","minLength","valid","touched","brand","description","returnable","options","displayValue","cancellable","addedSuccessfully","history","push","Handler","event","preventDefault","onFormSubmit","id","inputChangedHandler","controlName","updatedControls","target","formElementsArray","key","config","form","map","formElement","Auth","Button","color","error","mapStateToProps","state","category","product","mapDispatchToProps","dispatch","formData","addProduct"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport Input from '../../../components/Ui/Backdrop/Input/Input';\nimport classes from '../../ChangePassword/changePassword.module.css';\nimport { checkValidity } from '../../../shared/utility';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\n\nconst AddProduct=(props)=> {\n    const[authForm,setAuthForm] =  useState({\n        productName:{\n            elementType:'input',\n            elementConfig:{\n                type:'productName',\n                placeholder:'your productName'\n            },\n            value:'',\n            validation:{\n                required:true,\n                minLength: 6\n            },\n            valid : false,\n            touched:false\n        },\n        brand:{\n            elementType:'input',\n            elementConfig:{\n                type:'brand',\n                placeholder:'your brand'\n            },\n            value:'',\n            validation:{\n                required:true,\n                minLength: 6\n            },\n            valid : false,\n            touched:false\n        },\n        description:{\n            elementType:'textarea',\n            elementConfig:{\n                type:'description',\n                placeholder:'product description'\n            },\n            value:'',\n            validation:{\n                required:true,\n                minLength: 6\n            },\n            valid : false,\n            touched:false\n        },\n        returnable: {\n            elementType: 'select',\n            elementConfig: {\n              options: [\n                { value: 'true', displayValue: 'true' },\n                { value: 'false', displayValue: 'false' }\n              ]\n            },\n            value: 'true',\n            validation: {},\n            valid: true\n          },\n          cancellable: {\n            elementType: 'select',\n            elementConfig: {\n              options: [\n                { value: 'true', displayValue: 'true' },\n                { value: 'false', displayValue: 'false' }\n              ]\n            },\n            value: 'true',\n            validation: {},\n            valid: true\n          }\n\n        \n    })\n\n    if(props.addedSuccessfully)\n    {\n        props.history.push(\"/viewCategoriesForSeller\")\n    }\n    \n    const Handler=(event)=>{\n        event.preventDefault();\n        props.onFormSubmit(authForm,props.id);\n    }\n\n const inputChangedHandler = (event,controlName)=>{\n    const updatedControls = {\n        ...authForm,\n        [controlName]: {\n            ...authForm[controlName],\n            value: event.target.value,\n            valid: checkValidity(event.target.value,authForm[controlName].validation),\n            \n            touched:true\n        }\n    };\n    setAuthForm(updatedControls);\n}\n\n    const formElementsArray=[];\n    for(let key in authForm){\n        formElementsArray.push({\n            id:key,\n            config:authForm[key]\n\n        })\n    }\n\n    \n    let form = formElementsArray.map(formElement=>(\n     <>\n     <label>{formElement.id}</label>\n        <Input\n        \n        key = {formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        changed={(event)=>inputChangedHandler(event,formElement.id)}\n        touched={formElement.config.touched}\n        />\n        </>\n    ))\n\n    return (\n        <div className={classes.Auth}>\n            <form onSubmit={Handler}>\n             {form}\n             <button className={classes.Button}>Submit</button>\n            </form>\n            <h2 style={{color:\"red\"}}>{props.error}</h2>\n            \n        </div>\n    )\n    \n    }\n\nconst mapStateToProps = state => {\n    return {\n        id: state.category.id,\n        error:state.product.error,\n        addedSuccessfully:state.product.addedSuccessfully\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFormSubmit: (formData,id) => dispatch(actions.addProduct(formData,id))\n        \n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(AddProduct)\n"]},"metadata":{},"sourceType":"module"}