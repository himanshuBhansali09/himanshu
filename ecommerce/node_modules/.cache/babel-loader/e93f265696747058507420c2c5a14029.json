{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  console.log('auth start');\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logOut = () => {\n  const token = localStorage.getItem('token');\n  const AuthStr = 'Bearer '.concat(token);\n  axios.get(\"/doLogout\", {\n    headers: {\n      Authorization: AuthStr\n    }\n  }).then(response => {\n    console.log(response.data);\n  }).catch(error => {\n    console.log('error ' + error);\n  });\n  localStorage.removeItem('roleName');\n  localStorage.removeItem('lastName');\n  localStorage.removeItem('firstName');\n  localStorage.removeItem('id');\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('userName');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logOut());\n    }, expirationTime * 1000);\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"grant_type\", \"password\");\n    bodyFormData.append(\"client_id\", \"live-test\");\n    bodyFormData.append(\"username\", email);\n    bodyFormData.append(\"password\", password);\n    bodyFormData.append(\"client_secret\", \"abcde\");\n    axios.get(\"/getUser/\" + email).then(response => {\n      localStorage.setItem('id', response.data.split(\" \")[0]);\n      localStorage.setItem('firstName', response.data.split(\" \")[1]);\n      localStorage.setItem('lastName', response.data.split(\" \")[2]);\n      localStorage.setItem('roleName', response.data.split(\" \")[3]);\n      axios.post(\"/oauth/token\", bodyFormData).then(response => {\n        const expirationDate = new Date(new Date().getTime() + response.data.expires_in * 1000);\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('refreshToken', response.data.refresh_token);\n        localStorage.setItem('userName', email);\n        dispatch(authSuccess(response.data.access_token));\n        dispatch(checkAuthTimeout(response.data.expires_in));\n      });\n      return console.log(response.data);\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n      alert(\"username or password is wrong\");\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logOut());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logOut());\n      } else {\n        dispatch(authSuccess(token));\n        console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","console","log","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logOut","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","bodyFormData","FormData","set","append","setItem","split","post","expirationDate","Date","getTime","expires_in","access_token","refresh_token","alert","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM;AADf,GAAP;AAGH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,YADf;AAEHF,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,IAAI,EAAEL,WAAW,CAACa,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AAExB,QAAMN,KAAK,GAAGO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBV,KAAjB,CAAhB;AACAP,EAAAA,KAAK,CAACkB,GAAN,CAAU,WAAV,EAAuB;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEJ;AAAjB;AAAX,GAAvB,EACKK,IADL,CACUC,QAAQ,IAAI;AACdpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAQ,CAACC,IAArB;AACH,GAHL,EAIKC,KAJL,CAIYb,KAAD,IAAW;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWQ,KAAvB;AACH,GANL;AAQAG,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,WAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,IAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,gBAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,cAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACA,SAAO;AACHrB,IAAAA,IAAI,EAAEL,WAAW,CAAC2B;AADf,GAAP;AAIH,CAxBM;AAyBP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAChD,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAAChB,MAAM,EAAP,CAAR;AACH,KAFS,EAEPe,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC5B,SAAS,EAAV,CAAR;AACA,QAAIiC,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,IAAAA,YAAY,CAACE,GAAb,CAAiB,YAAjB,EAA+B,UAA/B;AACAF,IAAAA,YAAY,CAACG,MAAb,CAAoB,WAApB,EAAiC,WAAjC;AACAH,IAAAA,YAAY,CAACG,MAAb,CAAoB,UAApB,EAAgCL,KAAhC;AACAE,IAAAA,YAAY,CAACG,MAAb,CAAoB,UAApB,EAAgCJ,QAAhC;AACAC,IAAAA,YAAY,CAACG,MAAb,CAAoB,eAApB,EAAqC,OAArC;AACArC,IAAAA,KAAK,CAACkB,GAAN,CAAU,cAAcc,KAAxB,EAA+BX,IAA/B,CAAoCC,QAAQ,IAAI;AAC5CR,MAAAA,YAAY,CAACwB,OAAb,CAAqB,IAArB,EAA2BhB,QAAQ,CAACC,IAAT,CAAcgB,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAA3B;AACAzB,MAAAA,YAAY,CAACwB,OAAb,CAAqB,WAArB,EAAkChB,QAAQ,CAACC,IAAT,CAAcgB,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAlC;AACAzB,MAAAA,YAAY,CAACwB,OAAb,CAAqB,UAArB,EAAiChB,QAAQ,CAACC,IAAT,CAAcgB,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAjC;AACAzB,MAAAA,YAAY,CAACwB,OAAb,CAAqB,UAArB,EAAiChB,QAAQ,CAACC,IAAT,CAAcgB,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAjC;AACAvC,MAAAA,KAAK,CAACwC,IAAN,CAAW,cAAX,EAA2BN,YAA3B,EAAyCb,IAAzC,CAA+CC,QAAD,IAAc;AACxD,cAAMmB,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuBrB,QAAQ,CAACC,IAAT,CAAcqB,UAAd,GAA2B,IAA3D,CAAvB;AACA9B,QAAAA,YAAY,CAACwB,OAAb,CAAqB,OAArB,EAA8BhB,QAAQ,CAACC,IAAT,CAAcsB,YAA5C;AACA/B,QAAAA,YAAY,CAACwB,OAAb,CAAqB,gBAArB,EAAuCG,cAAvC;AACA3B,QAAAA,YAAY,CAACwB,OAAb,CAAqB,cAArB,EAAqChB,QAAQ,CAACC,IAAT,CAAcuB,aAAnD;AACAhC,QAAAA,YAAY,CAACwB,OAAb,CAAqB,UAArB,EAAiCN,KAAjC;AACAH,QAAAA,QAAQ,CAACvB,WAAW,CAACgB,QAAQ,CAACC,IAAT,CAAcsB,YAAf,CAAZ,CAAR;AACAhB,QAAAA,QAAQ,CAACF,gBAAgB,CAACL,QAAQ,CAACC,IAAT,CAAcqB,UAAf,CAAjB,CAAR;AAEH,OATD;AAUA,aAAO1C,OAAO,CAACC,GAAR,CAAYmB,QAAQ,CAACC,IAArB,CAAP;AACH,KAhBD,EAgBGC,KAhBH,CAgBSb,KAAK,IAAI;AACdkB,MAAAA,QAAQ,CAACnB,QAAQ,CAACC,KAAK,CAACW,QAAN,CAAeC,IAAf,CAAoBZ,KAArB,CAAT,CAAR;AACAoC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACH,KAnBD;AAoBH,GA5BD;AA6BH,CA9BM;AAgCP,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACzC,SAAO;AACH7C,IAAAA,IAAI,EAAEL,WAAW,CAACmD,sBADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAOtB,QAAQ,IAAI;AACf,UAAMtB,KAAK,GAAGO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACR,KAAL,EAAY;AACRsB,MAAAA,QAAQ,CAAChB,MAAM,EAAP,CAAR;AACH,KAFD,MAEO;AACH,YAAM4B,cAAc,GAAG,IAAIC,IAAJ,CAAS5B,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAT,CAAvB;;AACA,UAAI0B,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;AAC9Bb,QAAAA,QAAQ,CAAChB,MAAM,EAAP,CAAR;AACH,OAFD,MAEO;AACHgB,QAAAA,QAAQ,CAACvB,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACsC,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IAAhE;AACAd,QAAAA,QAAQ,CAACF,gBAAgB,CAAC,CAACc,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IAArD,CAAjB,CAAR;AACH;AACJ;AACJ,GAdD;AAeH,CAhBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n    console.log('auth start')\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logOut = () => {\n\n    const token = localStorage.getItem('token')\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/doLogout\", { headers: { Authorization: AuthStr } })\n        .then(response => {\n            console.log(response.data);\n        })\n        .catch((error) => {\n            console.log('error ' + error);\n        });\n\n    localStorage.removeItem('roleName');\n    localStorage.removeItem('lastName');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('id');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userName');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n\n}\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logOut());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        var bodyFormData = new FormData();\n        bodyFormData.set(\"grant_type\", \"password\");\n        bodyFormData.append(\"client_id\", \"live-test\");\n        bodyFormData.append(\"username\", email);\n        bodyFormData.append(\"password\", password);\n        bodyFormData.append(\"client_secret\", \"abcde\");\n        axios.get(\"/getUser/\" + email).then(response => {\n            localStorage.setItem('id', response.data.split(\" \")[0])\n            localStorage.setItem('firstName', response.data.split(\" \")[1])\n            localStorage.setItem('lastName', response.data.split(\" \")[2])\n            localStorage.setItem('roleName', response.data.split(\" \")[3])\n            axios.post(\"/oauth/token\", bodyFormData).then((response) => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expires_in * 1000);\n                localStorage.setItem('token', response.data.access_token);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('refreshToken', response.data.refresh_token);\n                localStorage.setItem('userName', email);\n                dispatch(authSuccess(response.data.access_token));\n                dispatch(checkAuthTimeout(response.data.expires_in))\n\n            })\n            return console.log(response.data);\n        }).catch(error => {\n            dispatch(authFail(error.response.data.error))\n            alert(\"username or password is wrong\")\n        })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logOut());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logOut());\n            } else {\n                dispatch(authSuccess(token));\n                console.log((expirationDate.getTime() - new Date().getTime()) / 1000)\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}