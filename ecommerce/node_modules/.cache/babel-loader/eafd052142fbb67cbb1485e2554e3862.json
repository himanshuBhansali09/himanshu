{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Customer/CustomerAddress/CustomerAddress.js\";\nimport React, { useEffect } from 'react';\nimport CustomerAddressCards from './customerAddressCards';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport classes from './customerAddressCards.module.css';\n\nconst CustomerAddress = props => {\n  const {\n    onClicked\n  } = props;\n  useEffect(() => {\n    onClicked();\n  }, [onClicked]);\n\n  const AddNew = () => {\n    props.history.push(\"/addNewAddress\");\n  };\n\n  const updateAddress = id => {\n    props.history.push(\"/updateAddress\");\n    props.onUpdate(id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, props.address !== null ? /*#__PURE__*/React.createElement(React.Fragment, null, props.address.map(address => {\n    return /*#__PURE__*/React.createElement(CustomerAddressCards, {\n      city: address.city,\n      state: address.state,\n      country: address.country,\n      zipcode: address.zipcode,\n      addressLine: address.addressLine,\n      deleteHandler: () => props.onDelete(address.id),\n      addNewAddress: AddNew,\n      updateNewAddress: () => updateAddress(address.id),\n      id: address.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Add\"))));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.address.address);\n  return {\n    address: state.address.address\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClicked: () => dispatch(actions.getAddress()),\n    onDelete: id => dispatch(actions.deleteAddress(id)),\n    onAddNewAddress: () => dispatch(actions.addNewAddress()),\n    onUpdate: id => dispatch(actions.change(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerAddress);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Customer/CustomerAddress/CustomerAddress.js"],"names":["React","useEffect","CustomerAddressCards","connect","actions","classes","CustomerAddress","props","onClicked","AddNew","history","push","updateAddress","id","onUpdate","address","map","city","state","country","zipcode","addressLine","onDelete","Card","Container","mapStateToProps","console","log","mapDispatchToProps","dispatch","getAddress","deleteAddress","onAddNewAddress","addNewAddress","change"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\nimport  CustomerAddressCards from './customerAddressCards'\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index'\nimport classes from './customerAddressCards.module.css';\nconst CustomerAddress=(props)=> {\n\n    const {onClicked}=props\n    useEffect(()=>{\n        onClicked()\n    },[onClicked])\n\n    const AddNew=()=>{\n        props.history.push(\"/addNewAddress\")\n    }\n    const updateAddress=(id)=>{\n        props.history.push(\"/updateAddress\")\n        props.onUpdate(id)\n    }\n    \n    return (\n        <React.Fragment>\n        {props.address!==null?\n        <>\n        {                   \n            props.address.map((address) => {\n            return <CustomerAddressCards\n            city={address.city}\n            state={address.state}\n            country={address.country}\n            zipcode={address.zipcode}\n            addressLine={address.addressLine}\n            deleteHandler={()=>props.onDelete(address.id)}\n            addNewAddress={AddNew}\n            updateNewAddress={()=>updateAddress(address.id)}\n            id={address.id}/>\n        })}\n        </>:<div className={classes.Card}> \n            <div className={classes.Container}>\n            <h2>Add</h2>\n            </div>\n           </div>}\n\n        </React.Fragment>\n       \n    )\n}\nconst mapStateToProps = state=>{\n    console.log(state.address.address)\n    return{\n        address:state.address.address\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return{\n        onClicked: ()=>dispatch(actions.getAddress()),\n        onDelete: (id)=>dispatch(actions.deleteAddress(id)),\n        onAddNewAddress:()=>dispatch(actions.addNewAddress()),\n        onUpdate:(id)=>dispatch(actions.change(id))\n        }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomerAddress)\n"]},"metadata":{},"sourceType":"module"}