{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const getAddressStart = () => {\n  return {\n    type: actionTypes.GETADDRESS_START\n  };\n};\nexport const getAddressSuccess = () => {\n  return {\n    type: actionTypes.GETADDRESS_SUCCESS\n  };\n};\nexport const getAddressFail = error => {\n  return {\n    type: actionTypes.GETADDRESS_FAIL,\n    error: error\n  };\n};\nexport const saveAddress = address => {\n  return {\n    type: actionTypes.SAVE_ADDRESS,\n    address: address\n  };\n};\nexport const change = id => {\n  return {\n    type: actionTypes.CHANGE,\n    id: id\n  };\n};\nexport const getAddress = () => {\n  return dispatch => {\n    dispatch(getAddressStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/getAddresses\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveAddress(response.data));\n      dispatch(getAddressSuccess());\n    }).catch(error => {\n      dispatch(getAddressFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const deleteAddress = id => {\n  return dispatch => {\n    dispatch(getAddressStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.delete(\"/deleteAddress/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(getAddressSuccess());\n      window.location.reload(false);\n    }).catch(error => {\n      dispatch(getAddressFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addNewAddress = formData => {\n  return dispatch => {\n    dispatch(getAddressStart());\n    const data = {\n      \"city\": formData.city.value,\n      \"state\": formData.state.value,\n      \"country\": formData.country.value,\n      \"zipcode\": formData.zipcode.value,\n      \"addressLine\": formData.addressLine.value\n    };\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.put(\"/addNewAddress\", data, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(getAddressSuccess());\n      window.location.reload(false);\n    }).catch(error => {\n      dispatch(getAddressFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const updateAddressOfCustomer = formData => {\n  return dispatch => {\n    dispatch(getAddressStart());\n    const data = {\n      \"city\": formData.city.value,\n      \"state\": formData.state.value,\n      \"country\": formData.country.value,\n      \"zipcode\": formData.zipcode.value,\n      \"addressLine\": formData.addressLine.value\n    };\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.put(\"/addNewAddress\", data, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(getAddressSuccess());\n      window.location.reload(false);\n    }).catch(error => {\n      dispatch(getAddressFail());\n      console.log('error ' + error);\n    });\n  };\n}; // export const updateProfile=(firstName,middleName,lastName,contactNo,)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/customerAddress.js"],"names":["actionTypes","axios","getAddressStart","type","GETADDRESS_START","getAddressSuccess","GETADDRESS_SUCCESS","getAddressFail","error","GETADDRESS_FAIL","saveAddress","address","SAVE_ADDRESS","change","id","CHANGE","getAddress","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","deleteAddress","delete","window","location","reload","addNewAddress","formData","city","value","state","country","zipcode","addressLine","put","updateAddressOfCustomer"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const getAddressStart = () => {\n    return {\n        type: actionTypes.GETADDRESS_START\n    }\n}\nexport const getAddressSuccess = () => {\n    return {\n        type: actionTypes.GETADDRESS_SUCCESS\n    }\n}\n\nexport const getAddressFail = (error) => {\n    return {\n        type: actionTypes.GETADDRESS_FAIL,\n        error: error\n    }\n}\n\nexport const saveAddress = (address) => {\n    return {\n        type: actionTypes.SAVE_ADDRESS,\n        address: address\n    }\n}\n\nexport const change=(id)=>{\n    return{\n        type:actionTypes.CHANGE,\n        id:id\n    }\n}\n\nexport const getAddress = () => {\n    return dispatch => {\n        dispatch(getAddressStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/getAddresses\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveAddress(response.data))\n                dispatch(getAddressSuccess())\n            })\n            .catch((error) => {\n                dispatch(getAddressFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const deleteAddress = (id) => {\n    return dispatch => {\n        dispatch(getAddressStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.delete(\"/deleteAddress/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(getAddressSuccess())\n                window.location.reload(false)\n            })\n            .catch((error) => {\n                dispatch(getAddressFail())\n                console.log('error ' + error);\n            });\n    }\n}\nexport const addNewAddress = (formData) => {\n    return dispatch => {\n        dispatch(getAddressStart())\n        const data= {\n            \"city\": formData.city.value,\n            \"state\": formData.state.value,\n            \"country\": formData.country.value,\n            \"zipcode\": formData.zipcode.value,\n            \"addressLine\": formData.addressLine.value,\n            \n     }\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.put(\"/addNewAddress\",data ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(getAddressSuccess())\n                window.location.reload(false)\n            })\n            .catch((error) => {\n                dispatch(getAddressFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const updateAddressOfCustomer = (formData) => {\n    return dispatch => {\n        dispatch(getAddressStart())\n        const data= {\n            \"city\": formData.city.value,\n            \"state\": formData.state.value,\n            \"country\": formData.country.value,\n            \"zipcode\": formData.zipcode.value,\n            \"addressLine\": formData.addressLine.value,\n            \n     }\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.put(\"/addNewAddress\",data ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(getAddressSuccess())\n                window.location.reload(false)\n            })\n            .catch((error) => {\n                dispatch(getAddressFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\n\n\n// export const updateProfile=(firstName,middleName,lastName,contactNo,)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n                \n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }"]},"metadata":{},"sourceType":"module"}