{"ast":null,"code":"export const updateObject = (oldObject, updatedProperties) => {\n  return { ...oldObject,\n    ...updatedProperties\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/shared/utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAC,CAACC,SAAD,EAAWC,iBAAX,KAA+B;AACrD,SAAM,EACF,GAAGD,SADD;AAEF,OAAGC;AAFD,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAC,CAACC,KAAD,EAAQC,KAAR,KAAgB;AACvC,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAG,CAACD,KAAJ,EAAU;AACV,WAAO,IAAP;AACC;;AACD,MAAGA,KAAK,CAACE,QAAT,EAAkB;AAClBD,IAAAA,OAAO,GAAEF,KAAK,CAACI,IAAN,OAAgB,EAAhB,IAAsBF,OAA/B;AACC;;AAED,MAAGD,KAAK,CAACI,SAAT,EAAmB;AACnBH,IAAAA,OAAO,GAAEF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA5C;AACC;;AAED,MAAGD,KAAK,CAACM,SAAT,EAAmB;AACnBL,IAAAA,OAAO,GAAEF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA5C;AACC;;AAED,MAAGD,KAAK,CAACO,OAAT,EAAiB;AACjB,UAAMC,OAAO,GAAC,sEAAd;AACAP,IAAAA,OAAO,GAAEO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAhC;AACC;;AAKD,SAAOA,OAAP;AACC,CA1BE","sourcesContent":["export const updateObject=(oldObject,updatedProperties)=>{\n    return{\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity=(value, rules)=>{\n    let isValid = true;\n    if(!rules){\n    return true\n    }\n    if(rules.required){\n    isValid= value.trim() !=='' && isValid;\n    }\n    \n    if(rules.minLength){\n    isValid= value.length >= rules.minLength && isValid;\n    }\n    \n    if(rules.maxLength){\n    isValid= value.length <= rules.maxLength && isValid;\n    }\n    \n    if(rules.isEmail){\n    const pattern=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    isValid= pattern.test(value) && isValid\n    }\n\n    \n    \n    \n    return isValid;\n    }"]},"metadata":{},"sourceType":"module"}