{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  console.log('auth start');\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  console.log('auth success');\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  console.log('auth fail');\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logOut());\n    }, expirationTime * 1000);\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"grant_type\", \"password\");\n    bodyFormData.append(\"client_id\", \"live-test\");\n    bodyFormData.append(\"username\", email);\n    bodyFormData.append(\"password\", password);\n    bodyFormData.append(\"client_secret\", \"abcde\"); // axios.post(url, authData)\n    //     .then(response => {\n    //         console.log(response);\n    //         const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n    //         localStorage.setItem('token', response.data.idToken);\n    //         localStorage.setItem('expirationDate', expirationDate)\n    //         localStorage.setItem('userId',response.data.localId)\n    //         dispatch(authSuccess(response.data.idToken, response.data.localId));\n    //         dispatch(checkAuthTimeout(response.data.expiresIn))\n    //     })\n    //     .catch(err => {\n    //         console.log(err);\n    //         dispatch(authFail(err.response.data.error));\n    //     })\n\n    axios.post(\"/oauth/token\", bodyFormData).then(response => {\n      // console.log(this.state);\n      // this.setState({ isLoading: false, groups: response.data.greetings });\n      const expirationDate = new Date(new Date().getTime() + response.data.expires_in * 1000);\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('refreshToken', response.data.refresh_token);\n      localStorage.setItem('userName', email);\n      dispatch(authSuccess(response.data.access_token));\n      dispatch(checkAuthTimeout(response.data.expires_in));\n      return console.log(response.data);\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logOut());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logOut());\n      } else {\n        dispatch(authSuccess(token));\n        console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","console","log","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logOut","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","bodyFormData","FormData","set","append","post","then","response","expirationDate","Date","getTime","data","expires_in","setItem","access_token","refresh_token","catch","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n    console.log('auth start')\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    console.log('auth success')\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    \n    }\n}\n\nexport const authFail = (error) => {\n    console.log('auth fail')\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n\n}\n\nexport const logOut = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logOut());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        var bodyFormData = new FormData();\n        bodyFormData.set(\"grant_type\", \"password\");\n        bodyFormData.append(\"client_id\", \"live-test\");\n        bodyFormData.append(\"username\", email);\n        bodyFormData.append(\"password\", password);\n        bodyFormData.append(\"client_secret\", \"abcde\");\n    \n        // axios.post(url, authData)\n        //     .then(response => {\n        //         console.log(response);\n        //         const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n        //         localStorage.setItem('token', response.data.idToken);\n        //         localStorage.setItem('expirationDate', expirationDate)\n        //         localStorage.setItem('userId',response.data.localId)\n        //         dispatch(authSuccess(response.data.idToken, response.data.localId));\n        //         dispatch(checkAuthTimeout(response.data.expiresIn))\n        //     })\n        //     .catch(err => {\n        //         console.log(err);\n        //         dispatch(authFail(err.response.data.error));\n        //     })\n        axios.post(\"/oauth/token\", bodyFormData).then((response) => {\n            // console.log(this.state);\n            // this.setState({ isLoading: false, groups: response.data.greetings });\n            const expirationDate = new Date(new Date().getTime() + response.data.expires_in * 1000);\n            localStorage.setItem('token',response.data.access_token);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('refreshToken', response.data.refresh_token);\n            localStorage.setItem('userName', email);\n            dispatch(authSuccess(response.data.access_token));\n            dispatch(checkAuthTimeout(response.data.expires_in))\n            return console.log(response.data);\n            }).catch(error=>{\n                dispatch(authFail(error.response.data.error))\n            })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => \n{\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logOut());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logOut());\n            } else {\n                dispatch(authSuccess(token));\n                console.log((expirationDate.getTime() - new Date().getTime()) / 1000 )\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}