{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const saveProductVariations = productVariations => {\n  return {\n    type: actionTypes.SAVE_ALL_PRODUCT_VARIATIONS,\n    productVariations: productVariations\n  };\n};\nexport const getProductVariations = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/getAllProductVariations/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveProductVariations(response.data));\n    }).catch(error => {});\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/productVariation.js"],"names":["actionTypes","axios","saveProductVariations","productVariations","type","SAVE_ALL_PRODUCT_VARIATIONS","getProductVariations","id","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,iBAAD,IAAuB;AACxD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,2BADf;AAEHF,IAAAA,iBAAiB,EAAEA;AAFhB,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,oBAAoB,GAAIC,EAAD,IAAQ;AACxC,SAAOC,QAAQ,IAAI;AACf,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBJ,KAAjB,CAAhB;AACAR,IAAAA,KAAK,CAACa,GAAN,CAAU,8BAA4BP,EAAtC,EAA0C;AAAEQ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAA1C,EACKK,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,QAAQ,CAACN,qBAAqB,CAACgB,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACH,KAHL,EAIKC,KAJL,CAIYC,KAAD,IAAW,CACjB,CALL;AAMH,GATD;AAUH,CAXM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const saveProductVariations = (productVariations) => {\n    return {\n        type: actionTypes.SAVE_ALL_PRODUCT_VARIATIONS,\n        productVariations: productVariations\n    }\n}\n\nexport const getProductVariations = (id) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/getAllProductVariations/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveProductVariations(response.data))\n            })\n            .catch((error) => {\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}