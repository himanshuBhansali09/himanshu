{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Register/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\n\nconst Login = props => {\n  const [authForm, setAuthForm] = useState({\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'your email'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    firstName: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'firstName',\n        placeholder: 'your firstName'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    lastName: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'lastName',\n        placeholder: 'your lastName'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    contactNumber: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'contactNumber',\n        placeholder: 'your contactNumber'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'passsword',\n        placeholder: 'your password'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    confirmpassword: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'confirmpassword',\n        placeholder: 'your confirmpassword'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const redirectToSignup = () => {\n    props.history.push(\"/\");\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 18\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 18\n    }\n  }, \"New to this site\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: redirectToSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 18\n    }\n  }, \"SignUp now\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Register/Register.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","Login","props","authForm","setAuthForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","firstName","lastName","contactNumber","password","minLength","confirmpassword","inputChangedHandler","event","controlName","updatedControls","target","redirectToSignup","history","push","formElementsArray","key","id","config","form","map","formElement","Auth"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport {checkValidity,updateObject} from '../../shared/utility';\nconst Login = props => {\n    \n    const[authForm,setAuthForm] =  useState({\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    isEmail: true\n                },\n                valid : false,\n                touched:false\n            },\n            firstName:{\n                elementType:'input',\n                elementConfig:{\n                    type:'firstName',\n                    placeholder:'your firstName'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid : false,\n                touched:false\n            },\n            lastName:{\n                elementType:'input',\n                elementConfig:{\n                    type:'lastName',\n                    placeholder:'your lastName'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                },\n                valid : false,\n                touched:false\n            },\n            contactNumber:{\n                elementType:'input',\n                elementConfig:{\n                    type:'contactNumber',\n                    placeholder:'your contactNumber'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid : false,\n                touched:false\n            },\n            password:{\n                elementType:'input',\n                elementConfig:{\n                    type:'passsword',\n                    placeholder:'your password'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            },\n            confirmpassword:{\n                elementType:'input',\n                elementConfig:{\n                    type:'confirmpassword',\n                    placeholder:'your confirmpassword'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            }\n        })\n\n     const inputChangedHandler = (event,controlName)=>{\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value,authForm[controlName].validation),\n                \n                touched:true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n    const redirectToSignup=()=>{\n       props.history.push(\"/\")\n    }\n\n        const formElementsArray=[];\n        for(let key in authForm){\n            formElementsArray.push({\n                id:key,\n                config:authForm[key]\n\n            })\n        }\n\n        \n        let form = formElementsArray.map(formElement=>(\n            <Input\n            key = {formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event)=>inputChangedHandler(event,formElement.id)}\n            touched={formElement.config.touched}\n            />\n        ))\n\n        return (\n            <div className={classes.Auth}>\n               \n                <form>\n                 {form}\n                 <button>Login</button>\n                 <br/>\n                 <label>New to this site</label>\n                 <br/>\n                 <button onClick={redirectToSignup}>SignUp now</button>\n                </form>\n            </div>\n        )\n        \n        }\n\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}