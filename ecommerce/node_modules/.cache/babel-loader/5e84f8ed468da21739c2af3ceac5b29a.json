{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const getProductStart = () => {\n  return {\n    type: actionTypes.GETPRODUCT_START\n  };\n};\nexport const getProductSuccess = () => {\n  return {\n    type: actionTypes.GETPRODUCT_SUCCESS\n  };\n};\nexport const getProductFail = error => {\n  return {\n    type: actionTypes.GETPRODUCT_FAIL,\n    error: error\n  };\n};\nexport const saveProducts = products => {\n  return {\n    type: actionTypes.SAVE_GETPRODUCT,\n    products: products\n  };\n};\nexport const saveProductsForCustomer = productsForCustomer => {\n  return {\n    type: actionTypes.SAVE_GETPRODUCT,\n    productsForCustomer: productsForCustomer\n  };\n};\nexport const getProducts = () => {\n  return dispatch => {\n    dispatch(getProductStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/getProductsForAdmin\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveProducts(response.data));\n      dispatch(getProductSuccess());\n    }).catch(error => {\n      dispatch(getProductFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getProductsForCustomer = id => {\n  return dispatch => {\n    dispatch(getProductStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/getProductsForCustomer/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveProductsForCustomer(response.data));\n      dispatch(getProductSuccess());\n    }).catch(error => {\n      dispatch(getProductFail());\n      console.log('error ' + error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/product.js"],"names":["actionTypes","axios","getProductStart","type","GETPRODUCT_START","getProductSuccess","GETPRODUCT_SUCCESS","getProductFail","error","GETPRODUCT_FAIL","saveProducts","products","SAVE_GETPRODUCT","saveProductsForCustomer","productsForCustomer","getProducts","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","getProductsForCustomer","id"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHF,IAAAA,IAAI,EAAEH,WAAW,CAACM;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO;AACHL,IAAAA,IAAI,EAAEH,WAAW,CAACS,eADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAIC,QAAD,IAAc;AACtC,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,eADf;AAEHD,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,uBAAuB,GAAIC,mBAAD,IAAyB;AAC5D,SAAO;AACHX,IAAAA,IAAI,EAAEH,WAAW,CAACY,eADf;AAEHE,IAAAA,mBAAmB,EAAEA;AAFlB,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACd,eAAe,EAAhB,CAAR;AACA,UAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBJ,KAAjB,CAAhB;AACAhB,IAAAA,KAAK,CAACqB,GAAN,CAAU,sBAAV,EAAkC;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAAlC,EACKK,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,QAAQ,CAACN,YAAY,CAACgB,QAAQ,CAACC,IAAV,CAAb,CAAR;AACAX,MAAAA,QAAQ,CAACX,iBAAiB,EAAlB,CAAR;AACH,KAJL,EAKKuB,KALL,CAKYpB,KAAD,IAAW;AACdQ,MAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWtB,KAAvB;AACH,KARL;AASH,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMuB,sBAAsB,GAAIC,EAAD,IAAQ;AAC1C,SAAOhB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACd,eAAe,EAAhB,CAAR;AACA,UAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBJ,KAAjB,CAAhB;AACAhB,IAAAA,KAAK,CAACqB,GAAN,CAAU,6BAA2BU,EAArC,EAAyC;AAAET,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAAzC,EACKK,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,QAAQ,CAACH,uBAAuB,CAACa,QAAQ,CAACC,IAAV,CAAxB,CAAR;AACAX,MAAAA,QAAQ,CAACX,iBAAiB,EAAlB,CAAR;AACH,KAJL,EAKKuB,KALL,CAKYpB,KAAD,IAAW;AACdQ,MAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWtB,KAAvB;AACH,KARL;AASH,GAbD;AAcH,CAfM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const getProductStart = () => {\n    return {\n        type: actionTypes.GETPRODUCT_START\n    }\n}\nexport const getProductSuccess = () => {\n    return {\n        type: actionTypes.GETPRODUCT_SUCCESS\n    }\n}\n\nexport const getProductFail = (error) => {\n    return {\n        type: actionTypes.GETPRODUCT_FAIL,\n        error: error\n    }\n}\n\nexport const saveProducts = (products) => {\n    return {\n        type: actionTypes.SAVE_GETPRODUCT,\n        products: products\n    }\n}\nexport const saveProductsForCustomer = (productsForCustomer) => {\n    return {\n        type: actionTypes.SAVE_GETPRODUCT,\n        productsForCustomer: productsForCustomer\n    }\n}\nexport const getProducts = () => {\n    return dispatch => {\n        dispatch(getProductStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/getProductsForAdmin\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveProducts(response.data))\n                dispatch(getProductSuccess())\n            })\n            .catch((error) => {\n                dispatch(getProductFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getProductsForCustomer = (id) => {\n    return dispatch => {\n        dispatch(getProductStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/getProductsForCustomer/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveProductsForCustomer(response.data))\n                dispatch(getProductSuccess())\n            })\n            .catch((error) => {\n                dispatch(getProductFail())\n                console.log('error ' + error);\n            });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}