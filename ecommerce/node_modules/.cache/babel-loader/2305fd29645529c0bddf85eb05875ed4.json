{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const registerStart = () => {\n  console.log('register start');\n  return {\n    type: actionTypes.REGISTER_START\n  };\n};\nexport const registerSuccess = formData => {\n  console.log('register success');\n  return {\n    type: actionTypes.REGISTER_SUCCESS,\n    formData: formData\n  };\n};\nexport const registerFail = error => {\n  console.log('register fail');\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const register = (email, firstName, lastName, password, confirmPassword, contactNumber) => {\n  return dispatch => {\n    dispatch(registerStart());\n    const data = {\n      'username': email,\n      'firstName': firstName,\n      'lastName': lastName,\n      'password': password,\n      'confirmPassword': confirmPassword,\n      'contactNo': contactNumber\n    };\n    axios.post(\"/registerAsCustomer\", data).then(response => {\n      console.log(\"register successful\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const registerAsSeller = formData => {\n  return dispatch => {\n    dispatch(registerStart());\n    const data = {\n      \"username\": formData.email.value,\n      \"password\": formData.password.value,\n      \"confirmPassword\": formData.confirmpassword.value,\n      \"firstName\": formData.firstName.value,\n      \"lastName\": formData.lastName.value,\n      \"companyName\": formData.companyName.value,\n      \"companyContactNo\": formData.companyContactNo.value,\n      \"city\": formData.city.value,\n      \"state\": formData.state.value,\n      \"country\": formData.country.value,\n      \"zipcode\": formData.zipcode.value,\n      \"addressLine\": formData.addressLine.value,\n      \"gstNo\": formData.gstNo.value\n    };\n    axios.post(\"/registerAsSeller\", data).then(response => {\n      console.log(\"register successful\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/register.js"],"names":["actionTypes","axios","registerStart","console","log","type","REGISTER_START","registerSuccess","formData","REGISTER_SUCCESS","registerFail","error","AUTH_FAIL","register","email","firstName","lastName","password","confirmPassword","contactNumber","dispatch","data","post","then","response","catch","registerAsSeller","value","confirmpassword","companyName","companyContactNo","city","state","country","zipcode","addressLine","gstNo"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM;AADf,GAAP;AAGH,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACzCL,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACS,gBADf;AAEHD,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CANM;AAQP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AACnCR,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACY,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CANM;AAQP,OAAO,MAAME,QAAQ,GAAC,CAACC,KAAD,EAAOC,SAAP,EAAiBC,QAAjB,EAA0BC,QAA1B,EAAmCC,eAAnC,EAAmDC,aAAnD,KAAmE;AACrF,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAAClB,aAAa,EAAd,CAAR;AACA,UAAMmB,IAAI,GAAC;AACP,kBAAWP,KADJ;AAEP,mBAAYC,SAFL;AAGP,kBAAWC,QAHJ;AAIP,kBAAWC,QAJJ;AAKP,yBAAkBC,eALX;AAMP,mBAAYC;AANL,KAAX;AAQAlB,IAAAA,KAAK,CAACqB,IAAN,CAAW,qBAAX,EAAiCD,IAAjC,EAAuCE,IAAvC,CAA6CC,QAAQ,IAAE;AACnDrB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAFD,EAEIqB,KAFJ,CAEWd,KAAD,IAAS;AACfR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAJD;AAKH,GAfD;AAgBH,CAjBM;AAkBP,OAAO,MAAMe,gBAAgB,GAAElB,QAAD,IAAY;AACtC,SAAOY,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAAClB,aAAa,EAAd,CAAR;AACA,UAAMmB,IAAI,GAAE;AACR,kBAAYb,QAAQ,CAACM,KAAT,CAAea,KADnB;AAER,kBAAYnB,QAAQ,CAACS,QAAT,CAAkBU,KAFtB;AAGR,yBAAmBnB,QAAQ,CAACoB,eAAT,CAAyBD,KAHpC;AAIR,mBAAanB,QAAQ,CAACO,SAAT,CAAmBY,KAJxB;AAKR,kBAAYnB,QAAQ,CAACQ,QAAT,CAAkBW,KALtB;AAMR,qBAAcnB,QAAQ,CAACqB,WAAT,CAAqBF,KAN3B;AAOR,0BAAmBnB,QAAQ,CAACsB,gBAAT,CAA0BH,KAPrC;AAQR,cAAOnB,QAAQ,CAACuB,IAAT,CAAcJ,KARb;AASR,eAAQnB,QAAQ,CAACwB,KAAT,CAAeL,KATf;AAUR,iBAAUnB,QAAQ,CAACyB,OAAT,CAAiBN,KAVnB;AAWR,iBAAUnB,QAAQ,CAAC0B,OAAT,CAAiBP,KAXnB;AAYR,qBAAcnB,QAAQ,CAAC2B,WAAT,CAAqBR,KAZ3B;AAaR,eAAQnB,QAAQ,CAAC4B,KAAT,CAAeT;AAbf,KAAZ;AAeH1B,IAAAA,KAAK,CAACqB,IAAN,CAAW,mBAAX,EAA+BD,IAA/B,EAAqCE,IAArC,CAA2CC,QAAQ,IAAE;AAClDrB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAFA,EAEGqB,KAFH,CAEUd,KAAD,IAAS;AACfR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAJA;AAMA,GAvBD;AAwBH,CAzBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const registerStart = () => {\n    console.log('register start')\n    return {\n        type: actionTypes.REGISTER_START\n    }\n}\n\nexport const registerSuccess = (formData) => {\n    console.log('register success')\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        formData: formData    \n    }\n}\n\nexport const registerFail = (error) => {\n    console.log('register fail')\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const register=(email,firstName,lastName,password,confirmPassword,contactNumber)=>{\n    return dispatch=>{\n        dispatch(registerStart());\n        const data={\n            'username':email,\n            'firstName':firstName,\n            'lastName':lastName,\n            'password':password,\n            'confirmPassword':confirmPassword,\n            'contactNo':contactNumber\n        }\n        axios.post(\"/registerAsCustomer\",data).then((response=>{\n            console.log(\"register successful\")\n        })).catch((error)=>{\n            console.log(error)\n        })\n    }\n}\nexport const registerAsSeller=(formData)=>{\n    return dispatch=>{\n        dispatch(registerStart());\n        const data= {\n            \"username\": formData.email.value,\n            \"password\": formData.password.value,\n            \"confirmPassword\": formData.confirmpassword.value,\n            \"firstName\": formData.firstName.value,\n            \"lastName\": formData.lastName.value,\n            \"companyName\":formData.companyName.value,\n            \"companyContactNo\":formData.companyContactNo.value,\n            \"city\":formData.city.value,\n            \"state\":formData.state.value,\n            \"country\":formData.country.value,\n            \"zipcode\":formData.zipcode.value,\n            \"addressLine\":formData.addressLine.value,\n            \"gstNo\":formData.gstNo.value\n     }\n     axios.post(\"/registerAsSeller\",data).then((response=>{\n        console.log(\"register successful\")\n    })).catch((error)=>{\n        console.log(error)\n    })\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}