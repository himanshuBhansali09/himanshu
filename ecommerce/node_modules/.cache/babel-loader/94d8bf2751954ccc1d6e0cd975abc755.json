{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  error: null,\n  category: null,\n  metadataFields: null,\n  fetchedSuccessful: false\n};\n\nconst fetchCategoryStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst fetchCategorySuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true\n  });\n};\n\nconst fetchCategoryFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveCategory = (state, action) => {\n  return updateObject(state, {\n    category: action.category\n  });\n};\n\nconst metadataFieldsStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst metadataFieldsSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true\n  });\n};\n\nconst metadataFieldsFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveMetadataFields = (state, action) => {\n  return updateObject(state, {\n    metadataFields: action.metadataFields\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCHCATEGORY_START:\n      return fetchCategoryStart(state, action);\n\n    case actionTypes.FETCHCATEGORY_SUCCESS:\n      return fetchCategorySuccess(state, action);\n\n    case actionTypes.FETCHCATEGORY_FAIL:\n      return fetchCategoryFail(state, action);\n\n    case actionTypes.SAVE_FETCHCATEGORY:\n      return saveCategory(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/reducers/category.js"],"names":["actionTypes","updateObject","initialState","error","category","metadataFields","fetchedSuccessful","fetchCategoryStart","state","action","fetchCategorySuccess","fetchCategoryFail","saveCategory","metadataFieldsStart","metadataFieldsSuccess","metadataFieldsFail","saveMetadataFields","reducer","type","FETCHCATEGORY_START","FETCHCATEGORY_SUCCESS","FETCHCATEGORY_FAIL","SAVE_FETCHCATEGORY"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAC,IADS;AAEfC,EAAAA,QAAQ,EAAC,IAFM;AAGfC,EAAAA,cAAc,EAAC,IAHA;AAIfC,EAAAA,iBAAiB,EAAC;AAJH,CAAnB;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACvC,SAAOR,YAAY,CAACO,KAAD,EAAO;AAACL,IAAAA,KAAK,EAAC;AAAP,GAAP,CAAnB;AAEH,CAHD;;AAIA,MAAMO,oBAAoB,GAAG,CAACF,KAAD,EAAOC,MAAP,KAAgB;AACzC,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBL,IAAAA,KAAK,EAAC,IADgB;AAE1BG,IAAAA,iBAAiB,EAAC;AAFQ,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMK,iBAAiB,GAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACpC,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBL,IAAAA,KAAK,EAACM,MAAM,CAACN;AADS,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMS,YAAY,GAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AAC/B,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBJ,IAAAA,QAAQ,EAACK,MAAM,CAACL;AADM,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMS,mBAAmB,GAAG,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACxC,SAAOR,YAAY,CAACO,KAAD,EAAO;AAACL,IAAAA,KAAK,EAAC;AAAP,GAAP,CAAnB;AAEH,CAHD;;AAIA,MAAMW,qBAAqB,GAAG,CAACN,KAAD,EAAOC,MAAP,KAAgB;AAC1C,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBL,IAAAA,KAAK,EAAC,IADgB;AAE1BG,IAAAA,iBAAiB,EAAC;AAFQ,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMS,kBAAkB,GAAC,CAACP,KAAD,EAAOC,MAAP,KAAgB;AACrC,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBL,IAAAA,KAAK,EAACM,MAAM,CAACN;AADS,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMa,kBAAkB,GAAC,CAACR,KAAD,EAAOC,MAAP,KAAgB;AACrC,SAAOR,YAAY,CAACO,KAAD,EAAO;AACtBH,IAAAA,cAAc,EAACI,MAAM,CAACJ;AADA,GAAP,CAAnB;AAIH,CALD;;AAUA,MAAMY,OAAO,GAAE,CAACT,KAAK,GAACN,YAAP,EAAoBO,MAApB,KAA6B;AACxC,UAAQA,MAAM,CAACS,IAAf;AACI,SAAKlB,WAAW,CAACmB,mBAAjB;AACG,aAAOZ,kBAAkB,CAACC,KAAD,EAAOC,MAAP,CAAzB;;AACH,SAAKT,WAAW,CAACoB,qBAAjB;AACI,aAAOV,oBAAoB,CAACF,KAAD,EAAOC,MAAP,CAA3B;;AACA,SAAKT,WAAW,CAACqB,kBAAjB;AACI,aAAOV,iBAAiB,CAACH,KAAD,EAAOC,MAAP,CAAxB;;AACA,SAAKT,WAAW,CAACsB,kBAAjB;AACI,aAAOV,YAAY,CAACJ,KAAD,EAAOC,MAAP,CAAnB;;AACT;AACC,aAAOD,KAAP;AAVR;AAaH,CAdD;;AAgBA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState={\n    error:null,\n    category:null,\n    metadataFields:null,\n    fetchedSuccessful:false\n};\n\nconst fetchCategoryStart = (state,action)=>{\n    return updateObject(state,{error:null})\n    \n}\nconst fetchCategorySuccess = (state,action)=>{\n    return updateObject(state,{\n        error:null,\n    fetchedSuccessful:true})\n    \n}\n\nconst fetchCategoryFail=(state,action)=>{\n    return updateObject(state,{\n        error:action.error\n    })\n\n}\n\nconst saveCategory=(state,action)=>{\n    return updateObject(state,{\n        category:action.category\n    })\n\n}\n\nconst metadataFieldsStart = (state,action)=>{\n    return updateObject(state,{error:null})\n    \n}\nconst metadataFieldsSuccess = (state,action)=>{\n    return updateObject(state,{\n        error:null,\n    fetchedSuccessful:true})\n    \n}\n\nconst metadataFieldsFail=(state,action)=>{\n    return updateObject(state,{\n        error:action.error\n    })\n\n}\n\nconst saveMetadataFields=(state,action)=>{\n    return updateObject(state,{\n        metadataFields:action.metadataFields\n    })\n\n}\n\n\n\n\nconst reducer =(state=initialState,action)=>{\n    switch (action.type){\n        case actionTypes.FETCHCATEGORY_START:\n           return fetchCategoryStart(state,action)\n        case actionTypes.FETCHCATEGORY_SUCCESS:\n            return fetchCategorySuccess(state,action)\n            case actionTypes.FETCHCATEGORY_FAIL:\n                return fetchCategoryFail(state,action)\n                case actionTypes.SAVE_FETCHCATEGORY:\n                    return saveCategory(state,action)\n           default:\n            return state;\n        }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}