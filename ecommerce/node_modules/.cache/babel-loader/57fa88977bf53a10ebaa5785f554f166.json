{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  error: null,\n  products: null,\n  updatedSuccessfully: false,\n  productsForCustomer: null,\n  singleProductForCustomer: null,\n  addedSuccessfully: false,\n  productsForSeller: null,\n  singleproductForSeller: null\n};\n\nconst getProductStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst getProductSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    updatedSuccessfully: true\n  });\n};\n\nconst getProductFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveProducts = (state, action) => {\n  return updateObject(state, {\n    products: action.products\n  });\n};\n\nconst saveProductsForSeller = (state, action) => {\n  return updateObject(state, {\n    productsForSeller: action.productsForSeller\n  });\n};\n\nconst saveSingleProductsForSeller = (state, action) => {\n  return updateObject(state, {\n    singleproductForSeller: action.singleproductForSeller\n  });\n};\n\nconst saveProductsForCustomer = (state, action) => {\n  return updateObject(state, {\n    productsForCustomer: action.productsForCustomer\n  });\n};\n\nconst saveSingleProductForCustomer = (state, action) => {\n  return updateObject(state, {\n    singleProductForCustomer: action.singleProductForCustomer\n  });\n};\n\nconst productAddedSuccessfully = (state, action) => {\n  return updateObject(state, {\n    addedSuccessfully: true\n  });\n};\n\nconst addProductFail = (state, action) => {\n  return updateObject(state, {\n    addedSuccessfully: false,\n    error: action.error\n  });\n};\n\nconst getSimilarProductSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst getSimilarProductFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveSimilarProduct = (state, action) => {\n  return updateObject(state, {\n    similarProduct: action.similarProduct\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GETPRODUCT_START:\n      return getProductStart(state, action);\n\n    case actionTypes.GETPRODUCT_SUCCESS:\n      return getProductSuccess(state, action);\n\n    case actionTypes.GETPRODUCT_FAIL:\n      return getProductFail(state, action);\n\n    case actionTypes.SAVE_GETPRODUCT:\n      return saveProducts(state, action);\n\n    case actionTypes.SAVE_PRODUCTS_FOR_CUSTOMER:\n      return saveProductsForCustomer(state, action);\n\n    case actionTypes.SAVE_SINGLE_PRODUCT_FOR_CUSTOMER:\n      return saveSingleProductForCustomer(state, action);\n\n    case actionTypes.PRODUCT_ADDED_SUCCESSFULLY:\n      return productAddedSuccessfully(state, action);\n\n    case actionTypes.ADD_PRODUCT_FAIL:\n      return addProductFail(state, action);\n\n    case actionTypes.SAVE_PRODUCTS_FOR_SELLER:\n      return saveProductsForSeller(state, action);\n\n    case actionTypes.SAVE_SINGLE_PRODUCT_FOR_SELLER:\n      return saveSingleProductsForSeller(state, action);\n\n    case actionTypes.GET_SIMILAR_PRODUCT_SUCCESS:\n      return getSimilarProductSuccess(state, action);\n\n    case actionTypes.GET_SIMILAR_PRODUCT_FAIL:\n      return getSimilarProductFail(state, action);\n\n    case actionTypes.SAVE_SIMILAR_PRODUCTS:\n      return saveSimilarProduct(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/reducers/product.js"],"names":["actionTypes","updateObject","initialState","error","products","updatedSuccessfully","productsForCustomer","singleProductForCustomer","addedSuccessfully","productsForSeller","singleproductForSeller","getProductStart","state","action","getProductSuccess","getProductFail","saveProducts","saveProductsForSeller","saveSingleProductsForSeller","saveProductsForCustomer","saveSingleProductForCustomer","productAddedSuccessfully","addProductFail","getSimilarProductSuccess","getSimilarProductFail","saveSimilarProduct","similarProduct","reducer","type","GETPRODUCT_START","GETPRODUCT_SUCCESS","GETPRODUCT_FAIL","SAVE_GETPRODUCT","SAVE_PRODUCTS_FOR_CUSTOMER","SAVE_SINGLE_PRODUCT_FOR_CUSTOMER","PRODUCT_ADDED_SUCCESSFULLY","ADD_PRODUCT_FAIL","SAVE_PRODUCTS_FOR_SELLER","SAVE_SINGLE_PRODUCT_FOR_SELLER","GET_SIMILAR_PRODUCT_SUCCESS","GET_SIMILAR_PRODUCT_FAIL","SAVE_SIMILAR_PRODUCTS"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState={\n    error:null,\n    products:null,\n    updatedSuccessfully:false,\n    productsForCustomer:null,\n    singleProductForCustomer:null,\n    addedSuccessfully:false,\n    productsForSeller:null,\n    singleproductForSeller:null,\n};\n\nconst getProductStart = (state,action)=>{\n    return updateObject(state,{error:null})\n    \n}\nconst getProductSuccess = (state,action)=>{\n    return updateObject(state,{\n        error:null,\n    updatedSuccessfully:true})\n    \n}\n\nconst getProductFail=(state,action)=>{\n    return updateObject(state,{\n        error:action.error\n    })\n\n}\n\nconst saveProducts=(state,action)=>{\n    return updateObject(state,{\n        products:action.products\n    })\n\n}\n\nconst saveProductsForSeller=(state,action)=>{\n    return updateObject(state,{\n        productsForSeller:action.productsForSeller\n    })\n\n}\n\nconst saveSingleProductsForSeller=(state,action)=>{\n    return updateObject(state,{\n        singleproductForSeller:action.singleproductForSeller\n    })\n\n}\n\n\nconst saveProductsForCustomer=(state,action)=>{\n    return updateObject(state,{\n        productsForCustomer:action.productsForCustomer\n    })\n\n}\nconst saveSingleProductForCustomer=(state,action)=>{\n    return updateObject(state,{\n        singleProductForCustomer:action.singleProductForCustomer\n    })\n\n}\n\nconst productAddedSuccessfully=(state,action)=>{\n    return updateObject(state,{\n        addedSuccessfully:true\n    })\n}\nconst addProductFail=(state,action)=>{\n    return updateObject(state,{\n        addedSuccessfully:false,\n        error:action.error\n    })\n}\n\nconst getSimilarProductSuccess = (state,action) => {\n    return updateObject(state,{\n        error:null\n    })\n}\nconst getSimilarProductFail = (state,action) => {\n    return updateObject(state,{\n        error:action.error\n    })\n}\nconst saveSimilarProduct = (state,action) => {\n    return updateObject(state,{\n        similarProduct:action.similarProduct\n    })\n}\n\n\nconst reducer =(state=initialState,action)=>{\n    switch (action.type){\n        case actionTypes.GETPRODUCT_START:\n           return getProductStart(state,action)\n        case actionTypes.GETPRODUCT_SUCCESS:\n            return getProductSuccess(state,action)\n            case actionTypes.GETPRODUCT_FAIL:\n                return getProductFail(state,action)\n                case actionTypes.SAVE_GETPRODUCT:\n                    return saveProducts(state,action)\n                    case actionTypes.SAVE_PRODUCTS_FOR_CUSTOMER:\n                        return saveProductsForCustomer(state,action)\n                        case actionTypes.SAVE_SINGLE_PRODUCT_FOR_CUSTOMER:\n                            return saveSingleProductForCustomer(state,action)\n                            case actionTypes.PRODUCT_ADDED_SUCCESSFULLY:\n                                return productAddedSuccessfully(state,action)\n                                case actionTypes.ADD_PRODUCT_FAIL:\n                                    return addProductFail(state,action)\n                                    case actionTypes.SAVE_PRODUCTS_FOR_SELLER:\n                                        return saveProductsForSeller(state,action)\n                                        case actionTypes.SAVE_SINGLE_PRODUCT_FOR_SELLER:\n                                            return saveSingleProductsForSeller(state,action)\n                                            case actionTypes.GET_SIMILAR_PRODUCT_SUCCESS:\n                                                return getSimilarProductSuccess(state,action)\n                                                case actionTypes.GET_SIMILAR_PRODUCT_FAIL:\n                                                    return getSimilarProductFail(state,action)\n                                                    case actionTypes.SAVE_SIMILAR_PRODUCTS:\n                                                        return saveSimilarProduct(state,action)\n           default:\n            return state;\n        }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}