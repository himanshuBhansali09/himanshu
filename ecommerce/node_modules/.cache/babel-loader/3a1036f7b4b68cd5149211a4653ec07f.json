{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Customer/UpdateProfile.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nconst UpdateProfile = props => {\n  const [authForm, setAuthForm] = useState({\n    firstName: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'firtsName',\n        placeholder: 'your email'\n      },\n      value: props.profile.firstName,\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    lastname: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'lastName',\n        placeholder: 'your password'\n      },\n      value: props.profile.lastName,\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })); //authRedirect=<Redirect to={props.authRedirectPath}/>\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 18\n    }\n  }, \"Login\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.customer.profile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Customer/UpdateProfile.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","connect","actions","UpdateProfile","props","authForm","setAuthForm","firstName","elementType","elementConfig","type","placeholder","value","profile","validation","required","isEmail","valid","touched","lastname","lastName","minLength","inputChangedHandler","event","controlName","updatedControls","target","formElementsArray","key","push","id","config","form","map","formElement","Auth","Button","mapStateToProps","state","customer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Input from '../Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport {checkValidity,updateObject} from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nconst UpdateProfile = props => {\n    \n    const[authForm,setAuthForm] =  useState({\n            firstName:{\n                elementType:'input',\n                elementConfig:{\n                    type:'firtsName',\n                    placeholder:'your email'\n                },\n                value:props.profile.firstName,\n                validation:{\n                    required:true,\n                    isEmail: true\n                },\n                valid : false,\n                touched:false\n            },\n            lastname:{\n                elementType:'input',\n                elementConfig:{\n                    type:'lastName',\n                    placeholder:'your password'\n                },\n                value:props.profile.lastName,\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            }\n        })\n\n     const inputChangedHandler = (event,controlName)=>{\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value,authForm[controlName].validation),\n                \n                touched:true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n\n        const formElementsArray=[];\n        for(let key in authForm){\n            formElementsArray.push({\n                id:key,\n                config:authForm[key]\n\n            })\n        }\n\n        \n        let form = formElementsArray.map(formElement=>(\n            <Input\n            key = {formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event)=>inputChangedHandler(event,formElement.id)}\n            touched={formElement.config.touched}\n            />\n        ))\n       \n            //authRedirect=<Redirect to={props.authRedirectPath}/>\n            \n        \n\n        return (\n            <React.Fragment>\n            <div className={classes.Auth}>\n               \n                <form >\n                 {form}\n                 <button className={classes.Button}>Login</button>\n                </form>\n                \n            </div>\n             </React.Fragment>\n        )\n        \n        }\n        const mapStateToProps = state=>{\n            return{\n                profile:state.customer.profile\n            }\n        }\n        \n        const mapDispatchToProps = dispatch =>{\n            return{\n                }\n        }\n        \n\nexport default connect(mapStateToProps,mapDispatchToProps)(UpdateProfile)\n"]},"metadata":{},"sourceType":"module"}