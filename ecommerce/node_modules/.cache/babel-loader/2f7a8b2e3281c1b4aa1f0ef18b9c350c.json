{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  error: null,\n  category: null,\n  metadataFields: null,\n  fetchedSuccessful: false,\n  categoriesForAdmin: null,\n  id: null\n};\n\nconst fetchCategoryStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst fetchCategorySuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true\n  });\n};\n\nconst fetchCategoryFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveCategory = (state, action) => {\n  return updateObject(state, {\n    category: action.category\n  });\n};\n\nconst metadataFieldsStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst metadataFieldsSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true\n  });\n};\n\nconst metadataFieldsFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveMetadataFields = (state, action) => {\n  return updateObject(state, {\n    metadataFields: action.metadataFields\n  });\n};\n\nconst saveAllCategoriesForAdmin = (state, action) => {\n  return updateObject(state, {\n    categoriesForAdmin: action.categoriesForAdmin\n  });\n};\n\nconst updateId = (state, action) => {\n  return updateObject(state, {\n    id: action.id\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCHCATEGORY_START:\n      return fetchCategoryStart(state, action);\n\n    case actionTypes.FETCHCATEGORY_SUCCESS:\n      return fetchCategorySuccess(state, action);\n\n    case actionTypes.FETCHCATEGORY_FAIL:\n      return fetchCategoryFail(state, action);\n\n    case actionTypes.SAVE_FETCHCATEGORY:\n      return saveCategory(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_START:\n      return metadataFieldsStart(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_SUCCESS:\n      return metadataFieldsSuccess(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_FAIL:\n      return metadataFieldsFail(state, action);\n\n    case actionTypes.SAVE_FETCHMETADATAFIELD:\n      return saveMetadataFields(state, action);\n\n    case actionTypes.SAVE_CATEGORIES_FOR_ADMIN:\n      return saveAllCategoriesForAdmin(state, action);\n\n    case actionTypes.UPDATE_ID:\n      return updateId(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/reducers/category.js"],"names":["actionTypes","updateObject","initialState","error","category","metadataFields","fetchedSuccessful","categoriesForAdmin","id","fetchCategoryStart","state","action","fetchCategorySuccess","fetchCategoryFail","saveCategory","metadataFieldsStart","metadataFieldsSuccess","metadataFieldsFail","saveMetadataFields","saveAllCategoriesForAdmin","updateId","reducer","type","FETCHCATEGORY_START","FETCHCATEGORY_SUCCESS","FETCHCATEGORY_FAIL","SAVE_FETCHCATEGORY","FETCHMETADATAFIELD_START","FETCHMETADATAFIELD_SUCCESS","FETCHMETADATAFIELD_FAIL","SAVE_FETCHMETADATAFIELD","SAVE_CATEGORIES_FOR_ADMIN","UPDATE_ID"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    error: null,\n    category: null,\n    metadataFields: null,\n    fetchedSuccessful: false,\n    categoriesForAdmin:null,\n    id:null\n};\n\nconst fetchCategoryStart = (state, action) => {\n    return updateObject(state, { error: null })\n\n}\nconst fetchCategorySuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        fetchedSuccessful: true\n    })\n\n}\n\nconst fetchCategoryFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error\n    })\n\n}\n\nconst saveCategory = (state, action) => {\n    return updateObject(state, {\n        category: action.category\n    })\n\n}\n\nconst metadataFieldsStart = (state, action) => {\n    return updateObject(state, { error: null })\n\n}\nconst metadataFieldsSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        fetchedSuccessful: true\n    })\n\n}\n\nconst metadataFieldsFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error\n    })\n\n}\n\nconst saveMetadataFields = (state, action) => {\n    return updateObject(state, {\n        metadataFields: action.metadataFields\n    })\n\n}\n\n\nconst saveAllCategoriesForAdmin = (state, action) => {\n    return updateObject(state, {\n        categoriesForAdmin: action.categoriesForAdmin\n    })\n\n}\n\nconst updateId=(state,action)=>{\n    return updateObject(state,{\n        id:action.id\n    })\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCHCATEGORY_START:\n            return fetchCategoryStart(state, action)\n        case actionTypes.FETCHCATEGORY_SUCCESS:\n            return fetchCategorySuccess(state, action)\n        case actionTypes.FETCHCATEGORY_FAIL:\n            return fetchCategoryFail(state, action)\n        case actionTypes.SAVE_FETCHCATEGORY:\n            return saveCategory(state, action)\n\n        case actionTypes.FETCHMETADATAFIELD_START:\n            return metadataFieldsStart(state, action)\n        case actionTypes.FETCHMETADATAFIELD_SUCCESS:\n            return metadataFieldsSuccess(state, action)\n        case actionTypes.FETCHMETADATAFIELD_FAIL:\n            return metadataFieldsFail(state, action)\n        case actionTypes.SAVE_FETCHMETADATAFIELD:\n            return saveMetadataFields(state, action)\n            case actionTypes.SAVE_CATEGORIES_FOR_ADMIN:\n                return saveAllCategoriesForAdmin(state,action)\n                case actionTypes.UPDATE_ID:\n                    return updateId(state,action)\n        default:\n            return state;\n    }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}