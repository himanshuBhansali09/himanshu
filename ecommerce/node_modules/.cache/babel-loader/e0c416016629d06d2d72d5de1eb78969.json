{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Seller/SellerAddress.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nconst SellerAddress = props => {\n  const {\n    onClicked\n  } = props;\n  useEffect(() => {\n    console.log(\"use effect\");\n    onClicked();\n  }, [onClicked]);\n  const [authForm, setAuthForm] = useState({\n    city: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'city',\n        placeholder: 'your city'\n      },\n      value: props.address[0].city,\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    state: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'state',\n        placeholder: 'your state'\n      },\n      value: props.address[0].state,\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    country: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'country',\n        placeholder: 'your country'\n      },\n      value: props.address[0].country,\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    zipcode: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'zipcode',\n        placeholder: 'your zipcode'\n      },\n      value: props.address[0].zipcode,\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    addressLine: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'addressLine',\n        placeholder: 'your addressLine'\n      },\n      value: props.address[0].addressLine,\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onupdate(authForm, props.id);\n\n    if (props.addedSuccessfully) {\n      props.history.push(\"/addresses\");\n    }\n  };\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 18\n    }\n  }, \"Submit\"))));\n};\n\nconst mapStateToProps = state => {\n  console.log('id is in' + state.address.id);\n  console.log(state.address.address);\n  return {\n    address: state.address.address,\n    addedSuccessfully: state.address.addedSuccessfully,\n    id: state.address.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClicked: () => dispatch(actions.getAddressesofSeller()),\n    onupdate: (formData, id) => dispatch(actions.updateAddressOfCustomer(formData, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellerAddress);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Seller/SellerAddress.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","connect","actions","SellerAddress","props","onClicked","console","log","authForm","setAuthForm","city","elementType","elementConfig","type","placeholder","value","address","validation","required","isEmail","valid","touched","state","country","minLength","zipcode","addressLine","submitHandler","event","preventDefault","onupdate","id","addedSuccessfully","history","push","inputChangedHandler","controlName","updatedControls","target","formElementsArray","key","config","form","map","formElement","Auth","Button","mapStateToProps","mapDispatchToProps","dispatch","getAddressesofSeller","formData","updateAddressOfCustomer"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Input from '../Ui/Backdrop/Input/Input';\nimport classes from '../Login/login.module.css';\nimport {checkValidity,updateObject} from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nconst SellerAddress = props => {\n    const {onClicked}=props\n    useEffect(()=>{\n        console.log(\"use effect\")\n            onClicked();\n    },[onClicked]) \n\n    \n    const[authForm,setAuthForm] =  useState({\n            city:{\n                elementType:'input',\n                elementConfig:{\n                    type:'city',\n                    placeholder:'your city'\n                },\n                value:props.address[0].city,\n                validation:{\n                    required:true,\n                    isEmail: true\n                },\n                valid : false,\n                touched:false\n            },\n            state:{\n                elementType:'input',\n                elementConfig:{\n                    type:'state',\n                    placeholder:'your state'\n                },\n                value:props.address[0].state,\n                validation:{\n                    required:true,\n                    isEmail: true\n                },\n                valid : false,\n                touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'country',\n                    placeholder:'your country'\n                },\n                value:props.address[0].country,\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            },\n            zipcode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'zipcode',\n                    placeholder:'your zipcode'\n                },\n                value:props.address[0].zipcode,\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            },\n            addressLine:{\n                elementType:'input',\n                elementConfig:{\n                    type:'addressLine',\n                    placeholder:'your addressLine'\n                },\n                value:props.address[0].addressLine,\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            }\n        })      \n\n        const submitHandler=(event)=>{\n            event.preventDefault();\n            props.onupdate(authForm,props.id)\n            if (props.addedSuccessfully) {\n                props.history.push(\"/addresses\")\n            }\n\n        }\n\n     const inputChangedHandler = (event,controlName)=>{\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value,authForm[controlName].validation),\n                \n                touched:true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n        const formElementsArray=[];\n        for(let key in authForm){\n            formElementsArray.push({\n                id:key,\n                config:authForm[key]\n\n            })\n        }\n\n        let form = formElementsArray.map(formElement=>(\n           \n            <Input\n            key = {formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event)=>inputChangedHandler(event,formElement.id)}\n            touched={formElement.config.touched}\n            />\n        ))\n       \n        return (\n            <React.Fragment>\n            <div className={classes.Auth}>\n               \n                <form onSubmit={submitHandler}>\n                 {form}\n                 <button className={classes.Button}>Submit</button>\n                </form>\n                \n            </div>\n             </React.Fragment>\n        )\n        \n        }\n        const mapStateToProps = state=>{\n            console.log('id is in'+state.address.id)\n            console.log(state.address.address)\n            return{\n                address:state.address.address,\n                addedSuccessfully:state.address.addedSuccessfully,\n                id:state.address.id\n            }\n        }\n        \n        const mapDispatchToProps = dispatch =>{\n            return{\n                onClicked: ()=>dispatch(actions.getAddressesofSeller()),\n                onupdate:(formData,id)=>dispatch(actions.updateAddressOfCustomer(formData,id))\n                }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SellerAddress)\n"]},"metadata":{},"sourceType":"module"}