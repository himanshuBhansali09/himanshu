{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Category/AddCategory.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from '../ChangePassword/changePassword.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nconst AddCategory = props => {\n  const [authForm, setAuthForm] = useState({\n    categoryName: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'categoryName',\n        placeholder: 'your categoryName'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  if (props.categoryAddedSuccessfully) {\n    props.history.push(\"/adminDashboard\");\n  }\n\n  const Handler = event => {\n    event.preventDefault();\n    props.onFormSubmit(authForm);\n  };\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: Handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Submit\")), \"nknkn\", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"error is \", props.addError));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.category.categoryAddedSuccessfully, 'category added');\n  return {\n    addError: state.category.addError,\n    categoryAddedSuccessfully: state.category.categoryAddedSuccessfully\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormSubmit: formData => dispatch(actions.addCategory(formData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Category/AddCategory.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","actions","connect","AddCategory","props","authForm","setAuthForm","categoryName","elementType","elementConfig","type","placeholder","value","validation","required","minLength","valid","touched","categoryAddedSuccessfully","history","push","Handler","event","preventDefault","onFormSubmit","inputChangedHandler","controlName","updatedControls","target","formElementsArray","key","id","config","form","map","formElement","Auth","Button","addError","mapStateToProps","state","console","log","category","mapDispatchToProps","dispatch","formData","addCategory"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,YAAY,EAAE;AACVC,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,cADK;AAEXC,QAAAA,WAAW,EAAE;AAFF,OAFL;AAMVC,MAAAA,KAAK,EAAE,EANG;AAOVC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,IADF;AAERC,QAAAA,SAAS,EAAE;AAFH,OAPF;AAWVC,MAAAA,KAAK,EAAE,KAXG;AAYVC,MAAAA,OAAO,EAAE;AAZC;AADuB,GAAD,CAAxC;;AAiBA,MAAGb,KAAK,CAACc,yBAAT,EACA;AACId,IAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACH;;AAED,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAnB,IAAAA,KAAK,CAACoB,YAAN,CAAmBnB,QAAnB;AACH,GAHD;;AAKA,QAAMoB,mBAAmB,GAAG,CAACH,KAAD,EAAQI,WAAR,KAAwB;AAChD,UAAMC,eAAe,GAAG,EACpB,GAAGtB,QADiB;AAEpB,OAACqB,WAAD,GAAe,EACX,GAAGrB,QAAQ,CAACqB,WAAD,CADA;AAEXd,QAAAA,KAAK,EAAEU,KAAK,CAACM,MAAN,CAAahB,KAFT;AAGXI,QAAAA,KAAK,EAAEjB,aAAa,CAACuB,KAAK,CAACM,MAAN,CAAahB,KAAd,EAAqBP,QAAQ,CAACqB,WAAD,CAAR,CAAsBb,UAA3C,CAHT;AAKXI,QAAAA,OAAO,EAAE;AALE;AAFK,KAAxB;AAUAX,IAAAA,WAAW,CAACqB,eAAD,CAAX;AACH,GAZD;;AAcA,QAAME,iBAAiB,GAAG,EAA1B;;AACA,OAAK,IAAIC,GAAT,IAAgBzB,QAAhB,EAA0B;AACtBwB,IAAAA,iBAAiB,CAACT,IAAlB,CAAuB;AACnBW,MAAAA,EAAE,EAAED,GADe;AAEnBE,MAAAA,MAAM,EAAE3B,QAAQ,CAACyB,GAAD;AAFG,KAAvB;AAKH;;AAGD,MAAIG,IAAI,GAAGJ,iBAAiB,CAACK,GAAlB,CAAsBC,WAAW,iBACxC,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEA,WAAW,CAACJ,EADrB;AAEI,IAAA,WAAW,EAAEI,WAAW,CAACH,MAAZ,CAAmBxB,WAFpC;AAGI,IAAA,aAAa,EAAE2B,WAAW,CAACH,MAAZ,CAAmBvB,aAHtC;AAII,IAAA,KAAK,EAAE0B,WAAW,CAACH,MAAZ,CAAmBpB,KAJ9B;AAKI,IAAA,OAAO,EAAGU,KAAD,IAAWG,mBAAmB,CAACH,KAAD,EAAQa,WAAW,CAACJ,EAApB,CAL3C;AAMI,IAAA,OAAO,EAAEI,WAAW,CAACH,MAAZ,CAAmBf,OANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAX;AAWA,sBACI;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACsC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,IADL,eAEI;AAAQ,IAAA,SAAS,EAAEnC,OAAO,CAACuC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,wBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcjC,KAAK,CAACkC,QAApB,CANJ,CADJ;AAWH,CA3ED;;AA4EA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAezB,yBAA3B,EAAqD,gBAArD;AACD,SAAO;AACHoB,IAAAA,QAAQ,EAACE,KAAK,CAACG,QAAN,CAAeL,QADrB;AAEHpB,IAAAA,yBAAyB,EAACsB,KAAK,CAACG,QAAN,CAAezB;AAFtC,GAAP;AAIH,CAND;;AASA,MAAM0B,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHrB,IAAAA,YAAY,EAAGsB,QAAD,IAAcD,QAAQ,CAAC5C,OAAO,CAAC8C,WAAR,CAAoBD,QAApB,CAAD;AADjC,GAAP;AAGH,CAJD;;AAKA,eAAe5C,OAAO,CAACqC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CzC,WAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from '../ChangePassword/changePassword.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nconst AddCategory = props => {\n\n    const [authForm, setAuthForm] = useState({\n        categoryName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'categoryName',\n                placeholder: 'your categoryName'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n    })\n\n    if(props.categoryAddedSuccessfully)\n    {\n        props.history.push(\"/adminDashboard\")\n    }\n\n    const Handler = (event) => {\n        event.preventDefault();\n        props.onFormSubmit(authForm);\n    }\n\n    const inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, authForm[controlName].validation),\n\n                touched: true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n    const formElementsArray = [];\n    for (let key in authForm) {\n        formElementsArray.push({\n            id: key,\n            config: authForm[key]\n\n        })\n    }\n\n\n    let form = formElementsArray.map(formElement => (\n        <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event) => inputChangedHandler(event, formElement.id)}\n            touched={formElement.config.touched}\n        />\n    ))\n\n    return (\n        <div className={classes.Auth}>\n            <form onSubmit={Handler}>\n                {form}\n                <button className={classes.Button}>Submit</button>\n            </form>\n            nknkn\n            <h1>error is {props.addError}</h1>\n        </div>\n    )\n\n}\nconst mapStateToProps = state => {\n     console.log(state.category.categoryAddedSuccessfully,'category added')\n    return {\n        addError:state.category.addError,\n        categoryAddedSuccessfully:state.category.categoryAddedSuccessfully\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFormSubmit: (formData) => dispatch(actions.addCategory(formData))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory)\n"]},"metadata":{},"sourceType":"module"}