{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const customerProfileStart = () => {\n  return {\n    type: actionTypes.GETPROFILE_START\n  };\n};\nexport const customerProfileSuccess = () => {\n  return {\n    type: actionTypes.GETPROFILE_SUCCESS\n  };\n};\nexport const customerProfileFail = error => {\n  return {\n    type: actionTypes.GETPROFILE_FAIL,\n    error: error\n  };\n};\nexport const saveProfile = profile => {\n  return {\n    type: actionTypes.SAVE_PROFILE,\n    profile: profile\n  };\n};\nexport const getProfile = () => {\n  return dispatch => {\n    dispatch(customerProfileStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewProfile\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveProfile(response.data));\n      dispatch(customerProfileSuccess());\n    }).catch(error => {\n      dispatch(customerProfileFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const updateProfile = formData => {\n  return dispatch => {\n    dispatch(customerProfileStart());\n    const data = {\n      \"firstName\": formData.firstName.value,\n      \"lastName\": formData.lastName.value\n    };\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.put(\"/updateProfile\", data, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      dispatch(customerProfileFail());\n      console.log('error ' + error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/customerProfile.js"],"names":["actionTypes","axios","customerProfileStart","type","GETPROFILE_START","customerProfileSuccess","GETPROFILE_SUCCESS","customerProfileFail","error","GETPROFILE_FAIL","saveProfile","profile","SAVE_PROFILE","getProfile","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","updateProfile","formData","firstName","value","lastName","put"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AACxC,SAAO;AACHF,IAAAA,IAAI,EAAEH,WAAW,CAACM;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC1C,SAAO;AACHL,IAAAA,IAAI,EAAEH,WAAW,CAACS,eADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,WAAW,GAAIC,OAAD,IAAa;AACpC,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,YADf;AAEHD,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AACA,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBJ,KAAjB,CAAhB;AACAd,IAAAA,KAAK,CAACmB,GAAN,CAAU,cAAV,EAA0B;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAA1B,EACKK,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,QAAQ,CAACJ,WAAW,CAACc,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACAX,MAAAA,QAAQ,CAACT,sBAAsB,EAAvB,CAAR;AACH,KAJL,EAKKqB,KALL,CAKYlB,KAAD,IAAW;AACdM,MAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWpB,KAAvB;AACH,KARL;AASH,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMqB,aAAa,GAAEC,QAAD,IAAY;AACnC,SAAOhB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AACA,UAAMuB,IAAI,GAAE;AACR,mBAAaK,QAAQ,CAACC,SAAT,CAAmBC,KADxB;AAER,kBAAYF,QAAQ,CAACG,QAAT,CAAkBD;AAFtB,KAAZ;AAIA,UAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBJ,KAAjB,CAAhB;AACAd,IAAAA,KAAK,CAACiC,GAAN,CAAU,gBAAV,EAA2BT,IAA3B,EAAiC;AAAEJ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEJ;AAAjB;AAAX,KAAjC,EACKK,IADL,CACUC,QAAQ,IAAI,CAEjB,CAHL,EAIKE,KAJL,CAIYlB,KAAD,IAAW;AACdM,MAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWpB,KAAvB;AACH,KAPL;AAQH,GAhBD;AAiBH,CAlBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const customerProfileStart = () => {\n    return {\n        type: actionTypes.GETPROFILE_START\n    }\n}\nexport const customerProfileSuccess = () => {\n    return {\n        type: actionTypes.GETPROFILE_SUCCESS\n    }\n}\n\nexport const customerProfileFail = (error) => {\n    return {\n        type: actionTypes.GETPROFILE_FAIL,\n        error: error\n    }\n}\n\nexport const saveProfile = (profile) => {\n    return {\n        type: actionTypes.SAVE_PROFILE,\n        profile: profile\n    }\n}\n\nexport const getProfile = () => {\n    return dispatch => {\n        dispatch(customerProfileStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewProfile\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveProfile(response.data))\n                dispatch(customerProfileSuccess())\n            })\n            .catch((error) => {\n                dispatch(customerProfileFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const updateProfile=(formData)=>{\n    return dispatch => {\n        dispatch(customerProfileStart())\n        const data= {\n            \"firstName\": formData.firstName.value,\n            \"lastName\": formData.lastName.value\n     }\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n                dispatch(customerProfileFail())\n                console.log('error ' + error);\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}