{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from './login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\n\nconst Login = props => {\n  const [authForm, setAuthForm] = useState({\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'your email'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'your password'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 8,\n        maxLength: 15\n      },\n      valid: false,\n      touched: false\n    }\n  });\n  useEffect(() => {\n    console.log(\"use effect calling\");\n\n    if (props.authRedirectPath !== '/') {\n      props.onSetAuthRedirectPath();\n    }\n  }, []);\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAuth(authForm.email.value, authForm.password.value);\n  };\n\n  const redirectToSignup = () => {\n    props.history.push(\"/register\");\n  };\n\n  const redirectToSignupAsSeller = () => {\n    props.history.push(\"/registerAsSeller\");\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    invalid: !formElement.config.valid,\n    shouldValidate: formElement.config.validation,\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n  let authRedirect = null;\n\n  if (props.isAuthenticated) {\n    if (props.roleName === \"ROLE_ADMIN\") {\n      props.history.push(\"/adminDashboard\");\n    } else {\n      if (props.roleName === \"ROLE_CUSTOMER\") {\n        props.history.push(\"/account\");\n      } else {\n        if (props.roleName === \"ROLE_SELLER\") {\n          props.history.push(\"/sellerAccount\");\n        } else {\n          props.history.push(\"/\");\n        }\n      }\n    } //authRedirect=<Redirect to={props.authRedirectPath}/>\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.MyStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"             \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"New to this site\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgotPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Forgot Password?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button1,\n    onClick: redirectToSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"SignUp now as Customer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button1,\n    onClick: redirectToSignupAsSeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"SignUp now as Seller\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath,\n    roleName: state.auth.roleName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, passsword) => dispatch(actions.auth(email, passsword)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Login/Login.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","connect","Link","actions","Login","props","authForm","setAuthForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","maxLength","console","log","authRedirectPath","onSetAuthRedirectPath","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","redirectToSignup","history","push","redirectToSignupAsSeller","formElementsArray","key","id","config","form","map","formElement","authRedirect","isAuthenticated","roleName","Auth","Button","MyStyle","Button1","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","passsword","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from './login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport * as actions from '../../store/actions/index';\n\nconst Login = props => {\n\n    const [authForm, setAuthForm] = useState({\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'your email'\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'your password'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 8,\n                maxLength:15\n            },\n            valid: false,\n            touched: false\n        }\n    })\n    useEffect(() => {\n        console.log(\"use effect calling\")\n        if (props.authRedirectPath !== '/') {\n            props.onSetAuthRedirectPath();\n        }\n    }, [])\n\n    const inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, authForm[controlName].validation),\n\n                touched: true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onAuth(authForm.email.value, authForm.password.value)\n    }\n\n    const redirectToSignup = () => {\n        props.history.push(\"/register\")\n    }\n    const redirectToSignupAsSeller = () => {\n        props.history.push(\"/registerAsSeller\")\n    }\n    const formElementsArray = [];\n    for (let key in authForm) {\n        formElementsArray.push({\n            id: key,\n            config: authForm[key]\n\n        })\n    }\n\n\n    let form = formElementsArray.map(formElement => (\n        <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event) => inputChangedHandler(event, formElement.id)}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n        />\n    ))\n    let authRedirect = null;\n    if (props.isAuthenticated) {\n        if (props.roleName === \"ROLE_ADMIN\") {\n            props.history.push(\"/adminDashboard\")\n        }\n        else {\n            if (props.roleName === \"ROLE_CUSTOMER\") {\n                props.history.push(\"/account\")\n            }\n            else {\n                if (props.roleName === \"ROLE_SELLER\") {\n                    props.history.push(\"/sellerAccount\")\n                }\n                else {\n                    props.history.push(\"/\")\n                }\n            }\n        }\n\n        //authRedirect=<Redirect to={props.authRedirectPath}/>\n\n    }\n\n    return (\n        <React.Fragment>\n            <div className={classes.Auth}>\n\n                <form onSubmit={submitHandler}>\n                    {form}\n                    <button className={classes.Button}>Login</button>\n                </form>\n\n            </div>\n            <div className={classes.MyStyle}>\n                <center>             <h3>\n                    <label>New to this site</label>\n                </h3>\n                    <Link to=\"/forgotPassword\">Forgot Password?</Link>\n                    <br />\n                    <br />\n                    <button className={classes.Button1} onClick={redirectToSignup}>SignUp now as Customer</button>\n                    <br />\n                    <br />\n                    <button className={classes.Button1} onClick={redirectToSignupAsSeller}>SignUp now as Seller</button>\n\n\n                </center>\n\n            </div>\n        </React.Fragment>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null,\n        authRedirectPath: state.auth.authRedirectPath,\n        roleName: state.auth.roleName\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, passsword) => dispatch(actions.auth(email, passsword)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}