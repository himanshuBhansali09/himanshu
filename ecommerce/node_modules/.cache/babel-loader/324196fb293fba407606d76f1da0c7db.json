{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const fetchCategoryStart = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_START\n  };\n};\nexport const fetchCategorySuccess = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_SUCCESS\n  };\n};\nexport const fetchCategoryFail = error => {\n  return {\n    type: actionTypes.FETCHCATEGORY_FAIL,\n    error: error\n  };\n};\nexport const saveCategory = category => {\n  return {\n    type: actionTypes.SAVE_FETCHCATEGORY,\n    category: category\n  };\n};\nexport const saveMetadataFields = metadataFields => {\n  return {\n    type: actionTypes.SAVE_METADATAFIELDS,\n    metadataFields: metadataFields\n  };\n};\nexport const getCategory = () => {\n  return dispatch => {\n    dispatch(fetchCategoryStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForSeller\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategory(response.data));\n      dispatch(fetchCategorySuccess());\n    }).catch(error => {\n      dispatch(fetchCategoryFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const viewCategoryMetadataField = () => {\n  return dispatch => {\n    dispatch(fetchCategoryStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoryMetadataField\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategory(response.data));\n      dispatch(fetchCategorySuccess());\n    }).catch(error => {\n      dispatch(fetchCategoryFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addMetadataField = formData => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addCategoryMetadataField\", {\n      \"name\": formData.categoryMetadataFieldName.value\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n}; // export const updateProfile=(firstName,middleName,lastName,contactNo)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n//                 dispatch(saveProfile(response.data))\n//                 dispatch(customerProfileSuccess())\n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/category.js"],"names":["actionTypes","axios","fetchCategoryStart","type","FETCHCATEGORY_START","fetchCategorySuccess","FETCHCATEGORY_SUCCESS","fetchCategoryFail","error","FETCHCATEGORY_FAIL","saveCategory","category","SAVE_FETCHCATEGORY","saveMetadataFields","metadataFields","SAVE_METADATAFIELDS","getCategory","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","viewCategoryMetadataField","addMetadataField","formData","post","categoryMetadataFieldName","value"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const fetchCategoryStart = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_START\n    }\n}\nexport const fetchCategorySuccess = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_SUCCESS\n    }\n}\n\nexport const fetchCategoryFail = (error) => {\n    return {\n        type: actionTypes.FETCHCATEGORY_FAIL,\n        error: error\n    }\n}\n\nexport const saveCategory = (category) => {\n    return {\n        type: actionTypes.SAVE_FETCHCATEGORY,\n        category: category\n    }\n}\n\nexport const saveMetadataFields=(metadataFields)=>{\n    return{\n        type:actionTypes.SAVE_METADATAFIELDS,\n        metadataFields:metadataFields\n    }\n}\n\n\nexport const getCategory = () => {\n    return dispatch => {\n        dispatch(fetchCategoryStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForSeller\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategory(response.data))\n                dispatch(fetchCategorySuccess())\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail())\n                console.log('error ' + error);\n            });\n    }\n}\nexport const viewCategoryMetadataField = () => {\n    return dispatch => {\n        dispatch(fetchCategoryStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoryMetadataField\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategory(response.data))\n                dispatch(fetchCategorySuccess())\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const addMetadataField = (formData) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addCategoryMetadataField\",{\"name\":formData.categoryMetadataFieldName.value} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\n\n\n// export const updateProfile=(firstName,middleName,lastName,contactNo)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n//                 dispatch(saveProfile(response.data))\n//                 dispatch(customerProfileSuccess())\n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }"]},"metadata":{},"sourceType":"module"}