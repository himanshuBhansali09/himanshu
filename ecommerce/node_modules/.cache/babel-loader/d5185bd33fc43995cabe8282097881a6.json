{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Project/ecommerce/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from './login.module.css';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nconst Login = props => {\n  const [authForm, setAuthForm] = useState({\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'your email'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'your password'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n  useEffect(() => {\n    console.log(\"use effect calling\");\n\n    if (props.authRedirectPath !== '/') {\n      props.onSetAuthRedirectPath();\n    }\n  }, []);\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = { ...authForm,\n      [controlName]: { ...authForm[controlName],\n        value: event.target.value,\n        valid: checkValidity(event.target.value, authForm[controlName].validation),\n        touched: true\n      }\n    };\n    setAuthForm(updatedControls);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAuth(authForm.email.value, authForm.password.value);\n  };\n\n  const redirectToSignup = () => {\n    props.history.push(\"/register\");\n  };\n\n  const redirectToforgotPassword = () => {\n    props.history.push(\"/forgotPassword\");\n  };\n\n  const redirectToSignupAsSeller = () => {\n    props.history.push(\"/registerAsSeller\");\n  };\n\n  const formElementsArray = [];\n\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    changed: event => inputChangedHandler(event, formElement.id),\n    touched: formElement.config.touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n  let authRedirect = null;\n  console.log(props.isAuthenticated);\n  console.log(props.authRedirectPath);\n  console.log(props.roleName);\n\n  if (props.isAuthenticated) {\n    if (props.roleName === \"ROLE_ADMIN\") {\n      props.history.push(\"/adminDashboard\");\n    } else {\n      if (props.roleName === \"ROLE_CUSTOMER\") {\n        props.history.push(\"/account\");\n      } else {\n        if (props.roleName === \"ROLE_SELLER\") {\n          props.history.push(\"/sellerAccount\");\n        } else {\n          props.history.push(\"/\");\n        }\n      }\n    } //authRedirect=<Redirect to={props.authRedirectPath}/>\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, form, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.MyStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }\n  }, \"             \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 14\n    }\n  }, \"New to this site\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button1,\n    onClick: redirectToSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 14\n    }\n  }, \"SignUp now as Customer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button1,\n    onClick: redirectToSignupAsSeller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 14\n    }\n  }, \"SignUp now as Seller\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button1,\n    onClick: redirectToforgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 14\n    }\n  }, \"Forgot Password\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath,\n    roleName: state.auth.roleName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, passsword) => dispatch(actions.auth(email, passsword)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/components/Login/Login.js"],"names":["React","useState","useEffect","Input","classes","checkValidity","updateObject","connect","actions","Login","props","authForm","setAuthForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","console","log","authRedirectPath","onSetAuthRedirectPath","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","redirectToSignup","history","push","redirectToforgotPassword","redirectToSignupAsSeller","formElementsArray","key","id","config","form","map","formElement","authRedirect","isAuthenticated","roleName","Auth","Button","MyStyle","Button1","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","passsword","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Input from '../../components/Ui/Backdrop/Input/Input';\nimport classes from './login.module.css';\nimport {checkValidity,updateObject} from '../../shared/utility';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nconst Login = props => {\n    \n    const[authForm,setAuthForm] =  useState({\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    isEmail: true\n                },\n                valid : false,\n                touched:false\n            },\n            password:{\n                elementType:'input',\n                elementConfig:{\n                    type:'password',\n                    placeholder:'your password'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength: 6\n                },\n                valid : false,\n                touched:false\n            }\n        })\n        useEffect(()=>{\n            console.log(\"use effect calling\")\n            if(props.authRedirectPath!=='/'){\n                props.onSetAuthRedirectPath();\n            }\n        },[])\n\n     const inputChangedHandler = (event,controlName)=>{\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value,authForm[controlName].validation),\n                \n                touched:true\n            }\n        };\n        setAuthForm(updatedControls);\n    }\n\n    const submitHandler=(event)=>{\n        event.preventDefault();\n        props.onAuth(authForm.email.value,authForm.password.value)\n    }\n\n    const redirectToSignup=()=>{\n       props.history.push(\"/register\")\n    }\n    const redirectToforgotPassword=()=>{\n        props.history.push(\"/forgotPassword\")\n    }\n    const redirectToSignupAsSeller=()=>{\n        props.history.push(\"/registerAsSeller\")\n    }\n        const formElementsArray=[];\n        for(let key in authForm){\n            formElementsArray.push({\n                id:key,\n                config:authForm[key]\n\n            })\n        }\n\n        \n        let form = formElementsArray.map(formElement=>(\n            <Input\n            key = {formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event)=>inputChangedHandler(event,formElement.id)}\n            touched={formElement.config.touched}\n            />\n        ))\n        let authRedirect = null;\n        console.log(props.isAuthenticated)\n        console.log(props.authRedirectPath)\n        console.log(props.roleName)\n        if(props.isAuthenticated){\n            if(props.roleName===\"ROLE_ADMIN\")\n            {\n                props.history.push(\"/adminDashboard\")\n            }\n            else\n            {\n                if(props.roleName===\"ROLE_CUSTOMER\")\n            {\n                props.history.push(\"/account\")\n            }\n            else{\n                if(props.roleName===\"ROLE_SELLER\")\n                {\n                  props.history.push(\"/sellerAccount\")\n                }\n                else{\n                props.history.push(\"/\")\n                }\n            }\n            }\n\n            //authRedirect=<Redirect to={props.authRedirectPath}/>\n            \n        }\n\n        return (\n            <React.Fragment>\n            <div className={classes.Auth}>\n               \n                <form onSubmit={submitHandler}>\n                 {form}\n                 <button className={classes.Button}>Login</button>\n                </form>\n                \n            </div>\n            <div className={classes.MyStyle}>\n             <center>             <h3>\n             <label>New to this site</label>\n             </h3>\n             <button className={classes.Button1} onClick={redirectToSignup}>SignUp now as Customer</button>\n             <br/>\n             <button className={classes.Button1} onClick={redirectToSignupAsSeller}>SignUp now as Seller</button>\n             <br/>\n             <button className={classes.Button1} onClick={redirectToforgotPassword}>Forgot Password</button>\n             \n             </center>\n\n             </div>\n             </React.Fragment>\n        )\n        \n        }\n\nconst mapStateToProps = state=>{\n            return{\n                isAuthenticated:state.auth.token!==null,\n                authRedirectPath:state.auth.authRedirectPath,\n                roleName:state.auth.roleName\n            }\n        }\n        \nconst mapDispatchToProps = dispatch =>{\n            return{\n                onAuth: (email,passsword)=>dispatch(actions.auth(email,passsword)),\n                onSetAuthRedirectPath: ()=> dispatch(actions.setAuthRedirectPath('/'))\n            }\n        }\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}