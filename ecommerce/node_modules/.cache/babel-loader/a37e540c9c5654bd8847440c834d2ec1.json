{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  error: null,\n  category: null,\n  metadataFields: null,\n  fetchedSuccessful: false,\n  categoriesForAdmin: null,\n  id: null,\n  categoriesWithoutLeaf: null,\n  customerCategories: null,\n  filteringDetails: null,\n  flag: false,\n  metadataFieldsAddedSuccessfully: false\n};\n\nconst saveFilteringDetails = (state, action) => {\n  return updateObject(state, {\n    filteringDetails: action.filteringDetails\n  });\n};\n\nconst saveCategoriesForCustomer = (state, action) => {\n  return updateObject(state, {\n    customerCategories: action.customerCategories\n  });\n};\n\nconst fetchCategoryStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst fetchCategorySuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true\n  });\n};\n\nconst fetchCategoryFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    flag: true\n  });\n};\n\nconst saveCategory = (state, action) => {\n  return updateObject(state, {\n    category: action.category\n  });\n};\n\nconst saveCategoriesWithoutLeaf = (state, action) => {\n  return updateObject(state, {\n    categoriesWithoutLeaf: action.categoriesWithoutLeaf\n  });\n};\n\nconst metadataFieldsStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst metadataFieldsSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    fetchedSuccessful: true,\n    metadataFieldsAddedSuccessfully: true\n  });\n};\n\nconst metadataFieldsFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveMetadataFields = (state, action) => {\n  return updateObject(state, {\n    metadataFields: action.metadataFields\n  });\n};\n\nconst saveAllCategoriesForAdmin = (state, action) => {\n  return updateObject(state, {\n    categoriesForAdmin: action.categoriesForAdmin\n  });\n};\n\nconst updateId = (state, action) => {\n  return updateObject(state, {\n    id: action.id\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCHCATEGORY_START:\n      return fetchCategoryStart(state, action);\n\n    case actionTypes.FETCHCATEGORY_SUCCESS:\n      return fetchCategorySuccess(state, action);\n\n    case actionTypes.FETCHCATEGORY_FAIL:\n      return fetchCategoryFail(state, action);\n\n    case actionTypes.SAVE_FETCHCATEGORY:\n      return saveCategory(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_START:\n      return metadataFieldsStart(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_SUCCESS:\n      return metadataFieldsSuccess(state, action);\n\n    case actionTypes.FETCHMETADATAFIELD_FAIL:\n      return metadataFieldsFail(state, action);\n\n    case actionTypes.SAVE_FETCHMETADATAFIELD:\n      return saveMetadataFields(state, action);\n\n    case actionTypes.SAVE_CATEGORIES_FOR_ADMIN:\n      return saveAllCategoriesForAdmin(state, action);\n\n    case actionTypes.UPDATE_ID:\n      return updateId(state, action);\n\n    case actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF:\n      return saveCategoriesWithoutLeaf(state, action);\n\n    case actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER:\n      return saveCategoriesForCustomer(state, action);\n\n    case actionTypes.SAVE_FILTERING_DETAILS_FOR_CUSTOMER:\n      return saveFilteringDetails(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/reducers/category.js"],"names":["actionTypes","updateObject","initialState","error","category","metadataFields","fetchedSuccessful","categoriesForAdmin","id","categoriesWithoutLeaf","customerCategories","filteringDetails","flag","metadataFieldsAddedSuccessfully","saveFilteringDetails","state","action","saveCategoriesForCustomer","fetchCategoryStart","fetchCategorySuccess","fetchCategoryFail","saveCategory","saveCategoriesWithoutLeaf","metadataFieldsStart","metadataFieldsSuccess","metadataFieldsFail","saveMetadataFields","saveAllCategoriesForAdmin","updateId","reducer","type","FETCHCATEGORY_START","FETCHCATEGORY_SUCCESS","FETCHCATEGORY_FAIL","SAVE_FETCHCATEGORY","FETCHMETADATAFIELD_START","FETCHMETADATAFIELD_SUCCESS","FETCHMETADATAFIELD_FAIL","SAVE_FETCHMETADATAFIELD","SAVE_CATEGORIES_FOR_ADMIN","UPDATE_ID","SAVE_CATEGORIES_WITHOUT_LEAF","SAVE_CATEGORIES_FOR_CUSTOMER","SAVE_FILTERING_DETAILS_FOR_CUSTOMER"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    error: null,\n    category: null,\n    metadataFields: null,\n    fetchedSuccessful: false,\n    categoriesForAdmin:null,\n    id:null,\n    categoriesWithoutLeaf:null,\n    customerCategories:null,\n    filteringDetails:null,\n    flag:false,\n    metadataFieldsAddedSuccessfully:false\n};\n\n\nconst saveFilteringDetails = (state, action) => {\n    return updateObject(state, {\n        filteringDetails: action.filteringDetails\n    })\n}\n\n\nconst saveCategoriesForCustomer = (state, action) => {\n    return updateObject(state, {\n        customerCategories: action.customerCategories\n    })\n}\nconst fetchCategoryStart = (state, action) => {\n    return updateObject(state, { error: null })\n\n}\nconst fetchCategorySuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        fetchedSuccessful: true\n    })\n\n}\n\nconst fetchCategoryFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        flag:true\n    })\n\n}\n\nconst saveCategory = (state, action) => {\n    return updateObject(state, {\n        category: action.category\n    })\n\n}\nconst saveCategoriesWithoutLeaf= (state, action) => {\n    return updateObject(state, {\n        categoriesWithoutLeaf: action.categoriesWithoutLeaf\n    })\n\n}\nconst metadataFieldsStart = (state, action) => {\n    return updateObject(state, { error: null })\n\n}\nconst metadataFieldsSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        fetchedSuccessful: true,\n        metadataFieldsAddedSuccessfully:true\n    })\n\n}\n\nconst metadataFieldsFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error\n    })\n\n}\n\nconst saveMetadataFields = (state, action) => {\n    return updateObject(state, {\n        metadataFields: action.metadataFields\n    })\n\n}\n\n\nconst saveAllCategoriesForAdmin = (state, action) => {\n    return updateObject(state, {\n        categoriesForAdmin: action.categoriesForAdmin\n    })\n\n}\n\nconst updateId=(state,action)=>{\n    return updateObject(state,{\n        id:action.id\n    })\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCHCATEGORY_START:\n            return fetchCategoryStart(state, action)\n        case actionTypes.FETCHCATEGORY_SUCCESS:\n            return fetchCategorySuccess(state, action)\n        case actionTypes.FETCHCATEGORY_FAIL:\n            return fetchCategoryFail(state, action)\n        case actionTypes.SAVE_FETCHCATEGORY:\n            return saveCategory(state, action)\n\n        case actionTypes.FETCHMETADATAFIELD_START:\n            return metadataFieldsStart(state, action)\n        case actionTypes.FETCHMETADATAFIELD_SUCCESS:\n            return metadataFieldsSuccess(state, action)\n        case actionTypes.FETCHMETADATAFIELD_FAIL:\n            return metadataFieldsFail(state, action)\n        case actionTypes.SAVE_FETCHMETADATAFIELD:\n            return saveMetadataFields(state, action)\n            case actionTypes.SAVE_CATEGORIES_FOR_ADMIN:\n                return saveAllCategoriesForAdmin(state,action)\n                case actionTypes.UPDATE_ID:\n                    return updateId(state,action)\n                    case actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF:\n                        return saveCategoriesWithoutLeaf(state,action)\n                        case actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER:\n                            return saveCategoriesForCustomer(state,action)\n                            case actionTypes.SAVE_FILTERING_DETAILS_FOR_CUSTOMER:\n                                return saveFilteringDetails(state,action)\n        default:\n            return state;\n    }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}