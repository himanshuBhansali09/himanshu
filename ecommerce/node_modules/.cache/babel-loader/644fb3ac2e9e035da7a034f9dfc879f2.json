{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  error: null,\n  products: null,\n  updatedSuccessfully: false,\n  productsForCustomer: null,\n  singleProductForCustomer: null,\n  addedSuccessfully: false\n};\n\nconst getProductStart = (state, action) => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst getProductSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    updatedSuccessfully: true\n  });\n};\n\nconst getProductFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst saveProducts = (state, action) => {\n  return updateObject(state, {\n    products: action.products\n  });\n};\n\nconst saveProductsForCustomer = (state, action) => {\n  return updateObject(state, {\n    productsForCustomer: action.productsForCustomer\n  });\n};\n\nconst saveSingleProductForCustomer = (state, action) => {\n  return updateObject(state, {\n    singleProductForCustomer: action.singleProductForCustomer\n  });\n};\n\nconst productAddedSuccessfully = (state, action) => {\n  return updateObject(state, {\n    addedSuccessfully: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GETPRODUCT_START:\n      return getProductStart(state, action);\n\n    case actionTypes.GETPRODUCT_SUCCESS:\n      return getProductSuccess(state, action);\n\n    case actionTypes.GETPRODUCT_FAIL:\n      return getProductFail(state, action);\n\n    case actionTypes.SAVE_GETPRODUCT:\n      return saveProducts(state, action);\n\n    case actionTypes.SAVE_PRODUCTS_FOR_CUSTOMER:\n      return saveProductsForCustomer(state, action);\n\n    case actionTypes.SAVE_SINGLE_PRODUCT_FOR_CUSTOMER:\n      return saveSingleProductForCustomer(state, action);\n\n    case actionTypes.PRODUCT_ADDED_SUCCESSFULLY:\n      return productAddedSuccessfully(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/reducers/product.js"],"names":["actionTypes","updateObject","initialState","error","products","updatedSuccessfully","productsForCustomer","singleProductForCustomer","addedSuccessfully","getProductStart","state","action","getProductSuccess","getProductFail","saveProducts","saveProductsForCustomer","saveSingleProductForCustomer","productAddedSuccessfully","reducer","type","GETPRODUCT_START","GETPRODUCT_SUCCESS","GETPRODUCT_FAIL","SAVE_GETPRODUCT","SAVE_PRODUCTS_FOR_CUSTOMER","SAVE_SINGLE_PRODUCT_FOR_CUSTOMER","PRODUCT_ADDED_SUCCESSFULLY"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAC,IADS;AAEfC,EAAAA,QAAQ,EAAC,IAFM;AAGfC,EAAAA,mBAAmB,EAAC,KAHL;AAIfC,EAAAA,mBAAmB,EAAC,IAJL;AAKfC,EAAAA,wBAAwB,EAAC,IALV;AAMfC,EAAAA,iBAAiB,EAAC;AANH,CAAnB;;AASA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpC,SAAOV,YAAY,CAACS,KAAD,EAAO;AAACP,IAAAA,KAAK,EAAC;AAAP,GAAP,CAAnB;AAEH,CAHD;;AAIA,MAAMS,iBAAiB,GAAG,CAACF,KAAD,EAAOC,MAAP,KAAgB;AACtC,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBP,IAAAA,KAAK,EAAC,IADgB;AAE1BE,IAAAA,mBAAmB,EAAC;AAFM,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMQ,cAAc,GAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACjC,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBP,IAAAA,KAAK,EAACQ,MAAM,CAACR;AADS,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMW,YAAY,GAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AAC/B,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBN,IAAAA,QAAQ,EAACO,MAAM,CAACP;AADM,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMW,uBAAuB,GAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AAC1C,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBJ,IAAAA,mBAAmB,EAACK,MAAM,CAACL;AADL,GAAP,CAAnB;AAIH,CALD;;AAMA,MAAMU,4BAA4B,GAAC,CAACN,KAAD,EAAOC,MAAP,KAAgB;AAC/C,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBH,IAAAA,wBAAwB,EAACI,MAAM,CAACJ;AADV,GAAP,CAAnB;AAIH,CALD;;AAOA,MAAMU,wBAAwB,GAAC,CAACP,KAAD,EAAOC,MAAP,KAAgB;AAC3C,SAAOV,YAAY,CAACS,KAAD,EAAO;AACtBF,IAAAA,iBAAiB,EAAC;AADI,GAAP,CAAnB;AAGH,CAJD;;AAKA,MAAMU,OAAO,GAAE,CAACR,KAAK,GAACR,YAAP,EAAoBS,MAApB,KAA6B;AACxC,UAAQA,MAAM,CAACQ,IAAf;AACI,SAAKnB,WAAW,CAACoB,gBAAjB;AACG,aAAOX,eAAe,CAACC,KAAD,EAAOC,MAAP,CAAtB;;AACH,SAAKX,WAAW,CAACqB,kBAAjB;AACI,aAAOT,iBAAiB,CAACF,KAAD,EAAOC,MAAP,CAAxB;;AACA,SAAKX,WAAW,CAACsB,eAAjB;AACI,aAAOT,cAAc,CAACH,KAAD,EAAOC,MAAP,CAArB;;AACA,SAAKX,WAAW,CAACuB,eAAjB;AACI,aAAOT,YAAY,CAACJ,KAAD,EAAOC,MAAP,CAAnB;;AACA,SAAKX,WAAW,CAACwB,0BAAjB;AACI,aAAOT,uBAAuB,CAACL,KAAD,EAAOC,MAAP,CAA9B;;AACA,SAAKX,WAAW,CAACyB,gCAAjB;AACI,aAAOT,4BAA4B,CAACN,KAAD,EAAOC,MAAP,CAAnC;;AACA,SAAKX,WAAW,CAAC0B,0BAAjB;AACI,aAAOT,wBAAwB,CAACP,KAAD,EAAOC,MAAP,CAA/B;;AACrB;AACC,aAAOD,KAAP;AAhBR;AAmBH,CApBD;;AAsBA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState={\n    error:null,\n    products:null,\n    updatedSuccessfully:false,\n    productsForCustomer:null,\n    singleProductForCustomer:null,\n    addedSuccessfully:false\n};\n\nconst getProductStart = (state,action)=>{\n    return updateObject(state,{error:null})\n    \n}\nconst getProductSuccess = (state,action)=>{\n    return updateObject(state,{\n        error:null,\n    updatedSuccessfully:true})\n    \n}\n\nconst getProductFail=(state,action)=>{\n    return updateObject(state,{\n        error:action.error\n    })\n\n}\n\nconst saveProducts=(state,action)=>{\n    return updateObject(state,{\n        products:action.products\n    })\n\n}\n\nconst saveProductsForCustomer=(state,action)=>{\n    return updateObject(state,{\n        productsForCustomer:action.productsForCustomer\n    })\n\n}\nconst saveSingleProductForCustomer=(state,action)=>{\n    return updateObject(state,{\n        singleProductForCustomer:action.singleProductForCustomer\n    })\n\n}\n\nconst productAddedSuccessfully=(state,action)=>{\n    return updateObject(state,{\n        addedSuccessfully:true\n    })\n}\nconst reducer =(state=initialState,action)=>{\n    switch (action.type){\n        case actionTypes.GETPRODUCT_START:\n           return getProductStart(state,action)\n        case actionTypes.GETPRODUCT_SUCCESS:\n            return getProductSuccess(state,action)\n            case actionTypes.GETPRODUCT_FAIL:\n                return getProductFail(state,action)\n                case actionTypes.SAVE_GETPRODUCT:\n                    return saveProducts(state,action)\n                    case actionTypes.SAVE_PRODUCTS_FOR_CUSTOMER:\n                        return saveProductsForCustomer(state,action)\n                        case actionTypes.SAVE_SINGLE_PRODUCT_FOR_CUSTOMER:\n                            return saveSingleProductForCustomer(state,action)\n                            case actionTypes.PRODUCT_ADDED_SUCCESSFULLY:\n                                return productAddedSuccessfully(state,action)\n           default:\n            return state;\n        }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}