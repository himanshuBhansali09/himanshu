{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const fetchCategoryStart = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_START\n  };\n};\nexport const fetchCategorySuccess = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_SUCCESS\n  };\n};\nexport const fetchCategoryFail = error => {\n  return {\n    type: actionTypes.FETCHCATEGORY_FAIL,\n    error: error\n  };\n};\nexport const saveCategory = category => {\n  return {\n    type: actionTypes.SAVE_FETCHCATEGORY,\n    category: category\n  };\n};\nexport const metadataFieldsStart = () => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_START\n  };\n};\nexport const metadataFieldsSuccess = () => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_SUCCESS\n  };\n};\nexport const metadataFieldsFail = error => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_FAIL,\n    error: error\n  };\n};\nexport const saveMetadataFields = metadataFields => {\n  return {\n    type: actionTypes.SAVE_FETCHMETADATAFIELD,\n    metadataFields: metadataFields\n  };\n};\nexport const saveAllCategoriesForAdmin = categoriesForAdmin => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_FOR_ADMIN,\n    categoriesForAdmin: categoriesForAdmin\n  };\n};\nexport const updateId = id => {\n  return {\n    type: actionTypes.UPDATE_ID,\n    id: id\n  };\n};\nexport const saveCategoriesWithoutLeaf = categoriesWithoutLeaf => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF,\n    categoriesWithoutLeaf: categoriesWithoutLeaf\n  };\n};\nexport const saveCategoriesForCustomer = customerCategories => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER,\n    customerCategories: customerCategories\n  };\n};\nexport const getCategory = () => {\n  return dispatch => {\n    dispatch(fetchCategoryStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForSeller\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategory(response.data));\n      dispatch(fetchCategorySuccess());\n    }).catch(error => {\n      dispatch(fetchCategoryFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const viewCategoryMetadataField = () => {\n  return dispatch => {\n    dispatch(metadataFieldsStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoryMetadataField\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveMetadataFields(response.data));\n      dispatch(metadataFieldsSuccess());\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addMetadataField = formData => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addCategoryMetadataField\", {\n      \"name\": formData.categoryMetadataFieldName.value\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const add = (id1, id2, values) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addMetadataValues/\" + id1 + \"/\" + id2, {\n      \"fieldValues\": values\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const deleteMetadata = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.delete(\"/deleteCategoryMetadataField/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      window.location.reload(false);\n    }).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getAllCategoriesForAdmin = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewAllCategories\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveAllCategoriesForAdmin(response.data));\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getCategoriesForAdd = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewAllCategoriesForAdd\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesWithoutLeaf(response.data));\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addCategory = formData => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addNewCategory\", {\n      \"name\": formData.categoryName.value\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addSubCategory = (name, id) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addNewCategory/\" + id, {\n      \"name\": name\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const updateCategory = (name, id) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.put(\"/updateCategory/\" + id, {\n      \"name\": name\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getCategoriesForCustomer = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForCustomer\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesForCustomer(response.data));\n    }).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getSubCategoriesForCustomer = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForCustomer/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesForCustomer(response.data));\n    }).catch(error => {\n      dispatch(fetchCategoryFail(error.response));\n    });\n  };\n}; // export const updateProfile=(firstName,middleName,lastName,contactNo)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n//                 dispatch(saveProfile(response.data))\n//                 dispatch(customerProfileSuccess())\n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/category.js"],"names":["actionTypes","axios","fetchCategoryStart","type","FETCHCATEGORY_START","fetchCategorySuccess","FETCHCATEGORY_SUCCESS","fetchCategoryFail","error","FETCHCATEGORY_FAIL","saveCategory","category","SAVE_FETCHCATEGORY","metadataFieldsStart","FETCHMETADATAFIELD_START","metadataFieldsSuccess","FETCHMETADATAFIELD_SUCCESS","metadataFieldsFail","FETCHMETADATAFIELD_FAIL","saveMetadataFields","metadataFields","SAVE_FETCHMETADATAFIELD","saveAllCategoriesForAdmin","categoriesForAdmin","SAVE_CATEGORIES_FOR_ADMIN","updateId","id","UPDATE_ID","saveCategoriesWithoutLeaf","categoriesWithoutLeaf","SAVE_CATEGORIES_WITHOUT_LEAF","saveCategoriesForCustomer","customerCategories","SAVE_CATEGORIES_FOR_CUSTOMER","getCategory","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","viewCategoryMetadataField","addMetadataField","formData","post","categoryMetadataFieldName","value","add","id1","id2","values","deleteMetadata","delete","window","location","reload","getAllCategoriesForAdmin","getCategoriesForAdd","addCategory","categoryName","addSubCategory","name","updateCategory","put","getCategoriesForCustomer","getSubCategoriesForCustomer"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const fetchCategoryStart = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_START\n    }\n}\nexport const fetchCategorySuccess = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_SUCCESS\n    }\n}\n\nexport const fetchCategoryFail = (error) => {\n    return {\n        type: actionTypes.FETCHCATEGORY_FAIL,\n        error: error\n    }\n}\n\nexport const saveCategory = (category) => {\n    return {\n        type: actionTypes.SAVE_FETCHCATEGORY,\n        category: category\n    }\n}\n\nexport const metadataFieldsStart = () => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_START\n    }\n}\nexport const metadataFieldsSuccess = () => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_SUCCESS\n    }\n}\n\nexport const metadataFieldsFail = (error) => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_FAIL,\n        error: error\n    }\n}\n\n\nexport const saveMetadataFields=(metadataFields)=>{\n    return{\n        type:actionTypes.SAVE_FETCHMETADATAFIELD,\n        metadataFields:metadataFields\n    }\n}\nexport const saveAllCategoriesForAdmin=(categoriesForAdmin)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_FOR_ADMIN,\n        categoriesForAdmin:categoriesForAdmin\n    }\n}\nexport const updateId=(id)=>{\n  return{\n      type:actionTypes.UPDATE_ID,\n      id:id\n  }\n}\n\nexport const saveCategoriesWithoutLeaf=(categoriesWithoutLeaf)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF,\n        categoriesWithoutLeaf:categoriesWithoutLeaf\n    }\n}\n\nexport const saveCategoriesForCustomer=(customerCategories)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER,\n        customerCategories:customerCategories\n    }\n}\n\n\n\nexport const getCategory = () => {\n    return dispatch => {\n        dispatch(fetchCategoryStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForSeller\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategory(response.data))\n                dispatch(fetchCategorySuccess())\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail())\n                console.log('error ' + error);\n            });\n    }\n}\nexport const viewCategoryMetadataField = () => {\n    return dispatch => {\n        dispatch(metadataFieldsStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoryMetadataField\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveMetadataFields(response.data))\n                dispatch(metadataFieldsSuccess())\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const addMetadataField = (formData) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addCategoryMetadataField\",{\"name\":formData.categoryMetadataFieldName.value} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const add=(id1,id2,values)=>{\n    return dispatch=>{\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addMetadataValues/\"+id1+\"/\"+id2,{\"fieldValues\":values} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n    }\n    \n\nexport const deleteMetadata=(id)=>{\n    return dispatch=>{\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.delete(\"/deleteCategoryMetadataField/\"+id,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                window.location.reload(false)\n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getAllCategoriesForAdmin = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewAllCategories\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveAllCategoriesForAdmin(response.data))\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getCategoriesForAdd=()=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewAllCategoriesForAdd\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesWithoutLeaf(response.data))\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const addCategory=(formData)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addNewCategory\",{\"name\":formData.categoryName.value} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\nexport const addSubCategory=(name,id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addNewCategory/\"+id,{\"name\":name} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\nexport const updateCategory=(name,id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.put(\"/updateCategory/\"+id,{\"name\":name} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getCategoriesForCustomer=()=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForCustomer\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesForCustomer(response.data))\n            })\n            .catch((error) => {\n                console.log('error ' + error);\n            });\n    }\n}\nexport const getSubCategoriesForCustomer=(id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForCustomer/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesForCustomer(response.data))\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail(error.response))\n            });\n    }\n}\n\n\n\n// export const updateProfile=(firstName,middleName,lastName,contactNo)=>{\n//     return dispatch => {\n//         dispatch(customerProfileStart())\n//         const data= {\n//             \"firstName\": firstName,\n//             \"middleName\": middleName,\n//             \"lastName\":lastName,\n//             \"contactNo\":contactNo\n//      }\n//         const token = localStorage.getItem('token')\n//         const AuthStr = 'Bearer '.concat(token);\n//         axios.put(\"/updateProfile\",data, { headers: { Authorization: AuthStr } })\n//             .then(response => {\n//                 dispatch(saveProfile(response.data))\n//                 dispatch(customerProfileSuccess())\n//             })\n//             .catch((error) => {\n//                 dispatch(customerProfileFail())\n//                 console.log('error ' + error);\n//             });\n//     }\n// }"]},"metadata":{},"sourceType":"module"}