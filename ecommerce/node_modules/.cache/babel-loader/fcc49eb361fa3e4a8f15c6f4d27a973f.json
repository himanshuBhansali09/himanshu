{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport const fetchCategoryStart = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_START\n  };\n};\nexport const fetchCategorySuccess = () => {\n  return {\n    type: actionTypes.FETCHCATEGORY_SUCCESS\n  };\n};\nexport const fetchCategoryFail = error => {\n  return {\n    type: actionTypes.FETCHCATEGORY_FAIL,\n    error: error\n  };\n};\nexport const saveCategory = category => {\n  return {\n    type: actionTypes.SAVE_FETCHCATEGORY,\n    category: category\n  };\n};\nexport const metadataFieldsStart = () => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_START\n  };\n};\nexport const metadataFieldsSuccess = () => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_SUCCESS\n  };\n};\nexport const metadataFieldsFail = error => {\n  return {\n    type: actionTypes.FETCHMETADATAFIELD_FAIL,\n    error: error\n  };\n};\nexport const saveMetadataFields = metadataFields => {\n  return {\n    type: actionTypes.SAVE_FETCHMETADATAFIELD,\n    metadataFields: metadataFields\n  };\n};\nexport const saveAllCategoriesForAdmin = categoriesForAdmin => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_FOR_ADMIN,\n    categoriesForAdmin: categoriesForAdmin\n  };\n};\nexport const updateId = id => {\n  return {\n    type: actionTypes.UPDATE_ID,\n    id: id\n  };\n};\nexport const saveCategoriesWithoutLeaf = categoriesWithoutLeaf => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF,\n    categoriesWithoutLeaf: categoriesWithoutLeaf\n  };\n};\nexport const saveCategoriesForCustomer = customerCategories => {\n  return {\n    type: actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER,\n    customerCategories: customerCategories\n  };\n};\nexport const saveFilteringDetails = filteringDetails => {\n  return {\n    type: actionTypes.SAVE_FILTERING_DETAILS_FOR_CUSTOMER,\n    filteringDetails: filteringDetails\n  };\n};\nexport const getCategory = () => {\n  return dispatch => {\n    dispatch(fetchCategoryStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForSeller\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategory(response.data));\n      dispatch(fetchCategorySuccess());\n    }).catch(error => {\n      dispatch(fetchCategoryFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const viewCategoryMetadataField = () => {\n  return dispatch => {\n    dispatch(metadataFieldsStart());\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoryMetadataField\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveMetadataFields(response.data));\n      dispatch(metadataFieldsSuccess());\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addMetadataField = formData => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addCategoryMetadataField\", {\n      \"name\": formData.categoryMetadataFieldName.value\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(metadataFieldsSuccess());\n    }).catch(error => {\n      dispatch(metadataFieldsFail(error.response.data.message));\n    });\n  };\n};\nexport const metadataFieldValueSuccess = () => {\n  return {\n    type: actionTypes.METADATA_VALUES_SUCCESS\n  };\n};\nexport const metadataFieldValueFail = error => {\n  return {\n    type: actionTypes.METADATA_VALUES_FAIL,\n    error: error\n  };\n};\nexport const add = (id1, id2, values) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addMetadataValues/\" + id1 + \"/\" + id2, {\n      \"fieldValues\": values\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const deleteMetadata = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.delete(\"/deleteCategoryMetadataField/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      window.location.reload(false);\n    }).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getAllCategoriesForAdmin = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewAllCategories\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveAllCategoriesForAdmin(response.data));\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getCategoriesForAdd = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewAllCategoriesForAdd\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesWithoutLeaf(response.data));\n    }).catch(error => {\n      dispatch(metadataFieldsFail());\n      console.log('error ' + error);\n    });\n  };\n};\nexport const addCategorySuccess = () => {\n  return {\n    type: actionTypes.ADD_CATEGORY_SUCCESS\n  };\n};\nexport const addCategoryFail = addError => {\n  return {\n    type: actionTypes.ADD_CATEGORY_FAIL,\n    addError: addError\n  };\n};\nexport const addSubCategorySuccess = () => {\n  return {\n    type: actionTypes.ADD_SUBCATEGORY_SUCCESS\n  };\n};\nexport const addSubCategoryFail = addSubError => {\n  return {\n    type: actionTypes.ADD_SUBCATEGORY_FAIL,\n    addSubError: addSubError\n  };\n};\nexport const addCategory = formData => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addNewCategory\", {\n      \"name\": formData.categoryName.value\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(addCategorySuccess());\n      window.location.reload(false);\n    }).catch(error => {\n      dispatch(addCategoryFail(error.response.data.message));\n      alert(\"Name should be unique and not empty\");\n    });\n  };\n};\nexport const addSubCategory = (name, id) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.post(\"/addNewCategory/\" + id, {\n      \"name\": name\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(addCategorySuccess());\n      window.location.reload(false);\n    }).catch(error => {\n      dispatch(addCategoryFail(error.response.data.message));\n      alert(\"Name should be unique and not empty\");\n    });\n  };\n};\nexport const updateCategory = (name, id) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.put(\"/updateCategory/\" + id, {\n      \"name\": name\n    }, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {}).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getCategoriesForCustomer = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForCustomer\", {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesForCustomer(response.data));\n    }).catch(error => {\n      console.log('error ' + error);\n    });\n  };\n};\nexport const getSubCategoriesForCustomer = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/viewCategoriesForCustomer/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveCategoriesForCustomer(response.data));\n    }).catch(error => {\n      dispatch(fetchCategoryFail(error.response.data.message));\n    });\n  };\n};\nexport const getFilterCategoriesForCustomer = id => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const AuthStr = 'Bearer '.concat(token);\n    axios.get(\"/filtering/\" + id, {\n      headers: {\n        Authorization: AuthStr\n      }\n    }).then(response => {\n      dispatch(saveFilteringDetails(response.data));\n    }).catch(error => {\n      dispatch(fetchCategoryFail(error.response.data.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/himanshu/Project/ecommerce/src/store/actions/category.js"],"names":["actionTypes","axios","Redirect","fetchCategoryStart","type","FETCHCATEGORY_START","fetchCategorySuccess","FETCHCATEGORY_SUCCESS","fetchCategoryFail","error","FETCHCATEGORY_FAIL","saveCategory","category","SAVE_FETCHCATEGORY","metadataFieldsStart","FETCHMETADATAFIELD_START","metadataFieldsSuccess","FETCHMETADATAFIELD_SUCCESS","metadataFieldsFail","FETCHMETADATAFIELD_FAIL","saveMetadataFields","metadataFields","SAVE_FETCHMETADATAFIELD","saveAllCategoriesForAdmin","categoriesForAdmin","SAVE_CATEGORIES_FOR_ADMIN","updateId","id","UPDATE_ID","saveCategoriesWithoutLeaf","categoriesWithoutLeaf","SAVE_CATEGORIES_WITHOUT_LEAF","saveCategoriesForCustomer","customerCategories","SAVE_CATEGORIES_FOR_CUSTOMER","saveFilteringDetails","filteringDetails","SAVE_FILTERING_DETAILS_FOR_CUSTOMER","getCategory","dispatch","token","localStorage","getItem","AuthStr","concat","get","headers","Authorization","then","response","data","catch","console","log","viewCategoryMetadataField","addMetadataField","formData","post","categoryMetadataFieldName","value","message","metadataFieldValueSuccess","METADATA_VALUES_SUCCESS","metadataFieldValueFail","METADATA_VALUES_FAIL","add","id1","id2","values","deleteMetadata","delete","window","location","reload","getAllCategoriesForAdmin","getCategoriesForAdd","addCategorySuccess","ADD_CATEGORY_SUCCESS","addCategoryFail","addError","ADD_CATEGORY_FAIL","addSubCategorySuccess","ADD_SUBCATEGORY_SUCCESS","addSubCategoryFail","addSubError","ADD_SUBCATEGORY_FAIL","addCategory","categoryName","alert","addSubCategory","name","updateCategory","put","getCategoriesForCustomer","getSubCategoriesForCustomer","getFilterCategoriesForCustomer"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport const fetchCategoryStart = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_START\n    }\n}\nexport const fetchCategorySuccess = () => {\n    return {\n        type: actionTypes.FETCHCATEGORY_SUCCESS\n    }\n}\n\nexport const fetchCategoryFail = (error) => {\n    return {\n        type: actionTypes.FETCHCATEGORY_FAIL,\n        error: error\n    }\n}\n\nexport const saveCategory = (category) => {\n    return {\n        type: actionTypes.SAVE_FETCHCATEGORY,\n        category: category\n    }\n}\n\nexport const metadataFieldsStart = () => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_START\n    }\n}\nexport const metadataFieldsSuccess = () => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_SUCCESS\n    }\n}\n\nexport const metadataFieldsFail = (error) => {\n    return {\n        type: actionTypes.FETCHMETADATAFIELD_FAIL,\n        error: error\n    }\n}\n\n\nexport const saveMetadataFields=(metadataFields)=>{\n    return{\n        type:actionTypes.SAVE_FETCHMETADATAFIELD,\n        metadataFields:metadataFields\n    }\n}\nexport const saveAllCategoriesForAdmin=(categoriesForAdmin)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_FOR_ADMIN,\n        categoriesForAdmin:categoriesForAdmin\n    }\n}\nexport const updateId=(id)=>{\n  return{\n      type:actionTypes.UPDATE_ID,\n      id:id\n  }\n}\n\nexport const saveCategoriesWithoutLeaf=(categoriesWithoutLeaf)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_WITHOUT_LEAF,\n        categoriesWithoutLeaf:categoriesWithoutLeaf\n    }\n}\n\nexport const saveCategoriesForCustomer=(customerCategories)=>{\n    return{\n        type:actionTypes.SAVE_CATEGORIES_FOR_CUSTOMER,\n        customerCategories:customerCategories\n    }\n}\n\nexport const saveFilteringDetails=(filteringDetails)=>{\n    return{\n        type:actionTypes.SAVE_FILTERING_DETAILS_FOR_CUSTOMER,\n        filteringDetails:filteringDetails\n    }\n}\n\n\n\n\nexport const getCategory = () => {\n    return dispatch => {\n        dispatch(fetchCategoryStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForSeller\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategory(response.data))\n                dispatch(fetchCategorySuccess())\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail())\n                console.log('error ' + error);\n            });\n    }\n}\nexport const viewCategoryMetadataField = () => {\n    return dispatch => {\n        dispatch(metadataFieldsStart())\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoryMetadataField\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveMetadataFields(response.data))\n                dispatch(metadataFieldsSuccess())\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const addMetadataField = (formData) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addCategoryMetadataField\",{\"name\":formData.categoryMetadataFieldName.value} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n              dispatch(metadataFieldsSuccess())  \n            })\n            .catch((error) => {\n               dispatch(metadataFieldsFail(error.response.data.message))\n            });\n    }\n}\n\nexport const metadataFieldValueSuccess = () => {\n    return {\n        type: actionTypes.METADATA_VALUES_SUCCESS\n    }\n}\n\nexport const metadataFieldValueFail = (error) => {\n    return {\n        type: actionTypes.METADATA_VALUES_FAIL,\n        error: error\n    }\n}\n\nexport const add=(id1,id2,values)=>{\n    return dispatch=>{\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addMetadataValues/\"+id1+\"/\"+id2,{\"fieldValues\":values} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n                console.log('error ' + error);\n            });\n    }\n    }\n    \n\nexport const deleteMetadata=(id)=>{\n    return dispatch=>{\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.delete(\"/deleteCategoryMetadataField/\"+id,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                window.location.reload(false)\n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getAllCategoriesForAdmin = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewAllCategories\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveAllCategoriesForAdmin(response.data))\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getCategoriesForAdd=()=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewAllCategoriesForAdd\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesWithoutLeaf(response.data))\n            })\n            .catch((error) => {\n                dispatch(metadataFieldsFail())\n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const addCategorySuccess = () => {\n    return {\n        type: actionTypes.ADD_CATEGORY_SUCCESS\n    }\n}\n\nexport const addCategoryFail = (addError) => {\n    return {\n        type: actionTypes.ADD_CATEGORY_FAIL,\n        addError: addError\n    }\n}\n\nexport const addSubCategorySuccess = () => {\n    return {\n        type: actionTypes.ADD_SUBCATEGORY_SUCCESS\n    }\n}\n\nexport const addSubCategoryFail = (addSubError) => {\n    return {\n        type: actionTypes.ADD_SUBCATEGORY_FAIL,\n        addSubError: addSubError\n    }\n}\n\n\n\nexport const addCategory=(formData)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addNewCategory\",{\"name\":formData.categoryName.value} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(addCategorySuccess())\n                window.location.reload(false) \n            })\n            .catch((error) => {\n               dispatch(addCategoryFail(error.response.data.message))\n               alert(\"Name should be unique and not empty\")\n            });\n    }\n}\nexport const addSubCategory=(name,id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.post(\"/addNewCategory/\"+id,{\"name\":name} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(addCategorySuccess())\n                window.location.reload(false)\n            })\n            .catch((error) => {\n                dispatch(addCategoryFail(error.response.data.message))\n                alert(\"Name should be unique and not empty\")\n            });\n    }\n}\nexport const updateCategory=(name,id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.put(\"/updateCategory/\"+id,{\"name\":name} ,{ headers: { Authorization: AuthStr } })\n            .then(response => {\n                \n            })\n            .catch((error) => {\n               \n                console.log('error ' + error);\n            });\n    }\n}\n\nexport const getCategoriesForCustomer=()=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForCustomer\", { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesForCustomer(response.data))\n            })\n            .catch((error) => {\n                console.log('error ' + error);\n            });\n    }\n}\nexport const getSubCategoriesForCustomer=(id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/viewCategoriesForCustomer/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveCategoriesForCustomer(response.data))\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail(error.response.data.message))\n            });\n    }\n}\nexport const getFilterCategoriesForCustomer=(id)=>{\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        const AuthStr = 'Bearer '.concat(token);\n        axios.get(\"/filtering/\"+id, { headers: { Authorization: AuthStr } })\n            .then(response => {\n                dispatch(saveFilteringDetails(response.data))\n            })\n            .catch((error) => {\n                dispatch(fetchCategoryFail(error.response.data.message))\n            });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}